
#### Установка Arch ####

# Инструкция предназначена для установки на реальный компьютер или вируальную машину VirtualBox с BIOS или UEFI на BTRFS или EXT4 c рабочими столами XFCE, Plasma, Mate и Gnome.

# Инструкция универсальна и позволяет произвести установку из любого совместимого дистрибутива Arch (EndeavourOS, ALG и т.д.), Manjaro или Artix.

#==============================================================================

### Подготовка ###

# Скачиваем образ EndeavourOS - https://endeavouros.com/latest-release/
# Или Arch Linux GUI (ALG) - https://sourceforge.net/projects/arch-linux-gui/files/
# Или Manjaro - https://manjaro.org/download/
# Или любой образ Artix - https://iso.artixlinux.org/weekly-isos.php
# Записываем образ на флешку програмой Ventoy или любой другой - https://github.com/ventoy/Ventoy/releases
# Загружаемся с записанного образа
# Запускаем эмулятор терминала

# Переходим в учётную запись рута
sudo su

# Синхронизируем время
timedatectl set-ntp true

# Унификация команд для установки системы из разных дистибутивов
if [[ $(cat /etc/*-release | grep NAME) == *'Manjaro Linux'* ]]; then
    # Команды для установки из Manjaro
    INSTALLPACK=basestrap
    CREATEFSTAB=fstabgen
    CHROOT=manjaro-chroot
elif [[ $(cat /etc/*-release | grep NAME) == *'Artix Linux'* ]]; then
    # Команды для установки из Artix
    INSTALLPACK=basestrap
    CREATEFSTAB=fstabgen
    CHROOT=artix-chroot
else
    # Команды для установки из Arch
    INSTALLPACK=pacstrap
    CREATEFSTAB=genfstab
    CHROOT=arch-chroot
fi

###############################################################################

### Установка ###

## Определение параметров установки (Меняйте на свои) ##

# Ядро (Примеры: linux - стандартное ядро, linux-lts - LTS-ядро, linux-zen - Zen-ядро, linux-lqx - ядро для "геймеров")
KERNEL=linux-lts
# Размер корневого раздела для Ext4 (Остальное пространство диска будем отдано для Home-раздела)
EXT4ROOT=40G
# Диск на который производится установка (Можно посмотреть командой lsblk)
DISK=/dev/sda
# Определение наименования разделов диска
if [[ $DISK == *'nvme'* ]]; then
    PART=$DISK\p # Для разделов NVME-диска, добавляем к имени диска букву 'p' (nvme1 -> nvme1p)
else
    PART=$DISK # Для других дисков sda, hda, vda и т.д. это не нужно
fi
# Размер файла подкачки (в мегабайтах)
if [[ $(lspci | grep VGA) == *'VMware'*  ]]; then
    SWAPFILE=2048 # На виртуальную машину - 2Gb (2*1024Mb)
else
    SWAPFILE=8192 # На реальный компьютер - 8Gb (8*1024Mb)
fi

#==============================================================================

## Настройка Pacman ##
# Генератор mirrorlist - https://archlinux.org/mirrorlist/

echo -e '[options]
HoldPkg = pacman glibc
Architecture = auto
Color
CheckSpace
DisableDownloadTimeout
ParallelDownloads = 10
SigLevel = Never
LocalFileSigLevel = Never
[core]
Include = /etc/pacman.d/mirrorlist
[extra]
Include = /etc/pacman.d/mirrorlist
[community]
Include = /etc/pacman.d/mirrorlist
[multilib]
Include = /etc/pacman.d/mirrorlist' > /etc/pacman.conf
echo -e '## Russia
Server = https://mirror.yandex.ru/archlinux/$repo/os/$arch
Server = https://mirror.truenetwork.ru/archlinux/$repo/os/$arch
Server = https://mirror.surf/archlinux/$repo/os/$arch
Server = https://mirror.nw-sys.ru/archlinux/$repo/os/$arch
Server = https://mirror.rol.ru/archlinux/$repo/os/$arch' > /etc/pacman.d/mirrorlist

#------------------------------------------------------------------------------

# Для ядра linux-lqx добавляем репозиторий и ключи проверки безопасности
if [ $KERNEL = 'linux-lqx' ]; then
    echo -e '[liquorix]
    Server = https://liquorix.net/archlinux/$repo/$arch' >> /etc/pacman.conf
    pacman-key --recv-key 9AE4078033F8024D --keyserver keyserver.ubuntu.com
    pacman-key --lsign-key 9AE4078033F8024D
fi

# Включение проверки безопасности GnuPG
if [[ $(cat /etc/*-release | grep NAME) != *'Arch Linux'* ]]; then
    pacman --noconfirm -Syy archlinux-keyring
    sed -i "s|^SigLevel = Never|SigLevel = Required DatabaseOptional|" /etc/pacman.conf
    sed -i "s|^LocalFileSigLevel = Never|LocalFileSigLevel = Optional|" /etc/pacman.conf
fi

###############################################################################

## Разбивка, форматирование и монтирование диска (BIOS & UEFI) ##

# BTRFS (с подтомами) #

# Определяем UEFI или BIOS на компьютере
if [ -d /sys/firmware/efi ]; then
    # Для UEFI создаём два раздела Root и EFI
    parted -s $DISK -- mktable gpt \
        mkpart Root btrfs 1M -300M \
        mkpart EFI fat32 -300M 100% \
    set 2 esp on
else
    # Для BIOS создаём один раздел Root на весь диск
    parted -s $DISK mktable msdos \
        mkpart primary btrfs 1M 100% \
    set 1 boot on
fi
# Форматируем раздел Root в Btrfs
mkfs.btrfs -f $PART\1
# Примонтируем раздел Root в /mnt
mount $PART\1 /mnt
# Создаем три подтома @root, @home и @snap
btrfs subvolume create /mnt/@root
btrfs subvolume create /mnt/@home
btrfs subvolume create /mnt/@snap
# Отмонтируем раздел Root
umount $PART\1
# И примонтируем уже подтом @root в /mnt с доп. параметрам
mount $PART\1 /mnt -o subvol=@root,noatime,nodiratime,compress=zstd:2,space_cache=v2,discard=async
# После примонтирования @root, создаем каталоги /mnt/home и /mnt/.snap,
mkdir -p /mnt/{home,.snap}
# Примонтируем подтом @home в /mnt/home с доп. параметрами
mount $PART\1 /mnt/home -o subvol=@home,noatime,nodiratime,compress=zstd:2,space_cache=v2,discard=async
# Примонтируем подтом @snap в /mnt/.snap с доп. параметрами
mount $PART\1 /mnt/.snap -o subvol=@snap,noatime,nodiratime,compress=lzo,space_cache=v2,discard=async
# Для UEFI форматируем и подключаем загрузочный раздел EFI
if [ -d /sys/firmware/efi ]; then
    # Форматируем раздел EFI в fat32
    mkfs.fat -F32 -n EFI $PART\3
    # Создаем каталог /mnt/boot/efi
    mkdir -p /mnt/boot/efi
    # Примонтируем EFI раздел
    mount $PART\3 /mnt/boot/efi
fi
# Проверяем результат
lsblk $DISK

#==============================================================================

# EXT4 #

# Определяем UEFI или BIOS на компьютере
if [ -d /sys/firmware/efi ]; then
    # Для UEFI создаем три раздела Root, Home и EFI
    parted -s $DISK -- mktable gpt \
        mkpart Root ext4 1M $EXT4ROOT \
        mkpart Home ext4 $EXT4ROOT -300M \
        mkpart EFI fat32 -300M 100% \
    set 3 esp on
else
    # Для BIOS создаем два раздела Root и Home
    parted -s $DISK mktable msdos \
        mkpart primary ext4 1M $EXT4ROOT \
        mkpart primary ext4 $EXT4ROOT 100% \
    set 1 boot on
fi
# Форматируем раздел Root и Home в ext4
mkfs.ext4 -L Root $PART\1
mkfs.ext4 -L Home $PART\2
# Примонтируем раздел Root в /mnt с доп. параметрами для ускорения работы Ext4
mount $PART\1 /mnt -o rw,noatime,nodiratime,norelatime,nobarrier,noacl
# После примонтирования Root, создаем каталог /mnt/home
mkdir -p /mnt/home
# Примонтируем раздел Home в /mnt/home с доп. параметрами для ускорения работы Ext4
mount $PART\2 /mnt/home -o rw,noatime,nodiratime,norelatime,nobarrier,noacl
# Для UEFI форматируем и подключаем загрузочный раздел EFI
if [ -d /sys/firmware/efi ]; then
    # Форматируем раздел EFI в fat32
    mkfs.fat -F32 -n EFI $PART\3
    # Создаем каталог /mnt/boot/efi
    mkdir -p /mnt/boot/efi
    # Примонтируем EFI раздел в ранее созданный каталог
    mount $PART\3 /mnt/boot/efi
fi
# Проверяем результат
lsblk $DISK

###############################################################################

## Создание файла подкачки для BTRFS или EXT4 (Опционально) ##

# Для Btrfs файл подкачки будет находиться по адресу - /@swap/swapfile
if [[ $(blkid $PART\1) == *'btrfs'* ]]; then
    # Создаем подтом @swap
    btrfs subvolume create /mnt/@swap
    # Переходим в @swap
    cd /mnt/@swap
    # Создаём пустой файл подкачки
    truncate -s 0 ./swapfile
    # Отключаем копирование при записи для файла подкачки
    chattr +C ./swapfile
    # Отключаем сжатие файла подкачки
    btrfs property set ./swapfile compression none
# Для Ext4 файл подкачки будет находиться по адресу - /mnt/swapfile
elif [[ $(blkid $PART\1) == *'ext4'* ]]; then
    # Создаем каталог /mnt/mnt
    mkdir -p /mnt/mnt
    # Переходим в mnt устанавливаемой системы
    cd /mnt/mnt
fi
# Создаём файл указанного размера
dd if=/dev/zero of=./swapfile bs=1M count=$SWAPFILE status=progress
# Разрешаем доступ к файлу подкачки только руту
chmod 600 ./swapfile
# Инициализируем и включаем файл подкачки
mkswap ./swapfile
swapon ./swapfile
# Проверяем результат
swapon -s

###############################################################################
######################### Установка базовой системы ###########################
###############################################################################

# Дополнительные пакеты для установки #
# Определение установочных пакетов микрокода для Intel или AMD
if [[ $(LC_ALL=C lscpu | grep Vendor) == *'GenuineIntel'* ]]; then
    UCODE='intel-ucode'
elif [[ $(LC_ALL=C lscpu | grep Vendor) == *'AuthenticAMD'* ]]; then
    UCODE='amd-ucode'
fi
# Определение установочных пакетов для Btrfs
# grub-btrfs - Загрузка в grub со снимков(снапшотов) btrfs
# btrfs-progs - Утилиты для обслуживания btrfs
if [[ $(blkid $PART\1) == *'btrfs'* ]]; then
    BTRFSUTILS='grub-btrfs btrfs-progs'
fi
# На реальный компьютер ставим пакет драйверов linux-firmware, на виртуальном он не нужен
if [[ $(lspci | grep VGA) != *'VMware'* ]]; then
    FIRMWARE='linux-firmware'
fi

# base, base-devel - Базовая система и пакеты для компиляции
# $KERNEL $KERNEL\-headers - Ядро
# $FIRMWARE - Пакет драйверов linux
# $BTRFSUTILS - Утилиты для Btrfs
# $UCODE - Микрокод для процессора
$INSTALLPACK /mnt base base-devel $KERNEL $KERNEL\-headers $FIRMWARE $BTRFSUTILS $UCODE

# Генерация fstab по UUID
$CREATEFSTAB -U /mnt > /mnt/etc/fstab

# Убираем лишнее "/mnt" в пути к файлу подкачки, если вдруг сгенерировалось с ним
sed -i "s|^/mnt/@swap/swapfile|/@swap/swapfile|" /mnt/etc/fstab # Для Btrfs
sed -i "s|^/mnt/mnt/swapfile|/mnt/swapfile|" /mnt/etc/fstab # Для Ext4
# Проверяем результат
cat /mnt/etc/fstab

###############################################################################

## Настройка параметров запуска системы (BTRFS & EXT4) ##

# Настройки установленные по умолчанию
DEFAULTHOOK='HOOKS=(base udev autodetect modconf block filesystems keyboard fsck)'
# Настройки для btrfs
BTRFSHOOK='HOOKS=(base systemd autodetect modconf block btrfs filesystems keyboard keymap)'
# Настройки для ext4
EXT4HOOK='HOOKS=(base systemd autodetect modconf block filesystems keyboard fsck)'
# Меняем настройки в файле конфигурации в зависимости от файловой системы
if [[ $(blkid $PART\1) == *'btrfs'* ]]; then
    sed -i "s|^$DEFAULTHOOK|$BTRFSHOOK|" /mnt/etc/mkinitcpio.conf
elif [[ $(blkid $PART\1) == *'ext4'* ]]; then
    sed -i "s|^$DEFAULTHOOK|$EXT4HOOK|" /mnt/etc/mkinitcpio.conf
fi

###############################################################################

## Установка загрузчика (Выберите один из вариантов) ##

# Grub (BIOS & UEFI)

# Определяем BIOS или UEFI на компьютере
if [ -d /sys/firmware/efi ]; then
    # Установка на UEFI
    $INSTALLPACK /mnt grub efibootmgr
    grub-install --target=x86_64-efi --root-directory=/mnt --bootloader-id=grub --efi-directory=/mnt/boot/efi
else
    # Установка на BIOS
    $INSTALLPACK /mnt grub
    grub-install --target=i386-pc --root-directory=/mnt $DISK
fi

#==============================================================================

# rEFInd (только для UEFI)

$INSTALLPACK /mnt refind
refind-install

###############################################################################
##################### Переход в устанавливаемую систему #######################
###############################################################################

$CHROOT /mnt

###############################################################################

## Определение параметров дальнейшей установки (Меняйте на свои) ##

if [[ $(lspci | grep VGA) == *'VMware'*  ]]; then
    # Виртуальная машина
    USERNAME=user # Имя пользователя
    HOSTNAME=virt # Имя компьютера
else
    # Реальный компьютер
    USERNAME=user # Имя пользователя
    HOSTNAME=main # Имя компьютера
fi
USERPASS=123 # Пароль пользователя
ROOTPASS=123 # Пароль рута
TIMEZONE=Europe/Moscow # Часовой пояс

###############################################################################

## Настройка Pacman и зеркал в устанавливаемой системе ##
# Автоматическая настройка mirrorlist:
#reflector -c "Russia" -f 12 -l 10 -n 12 --save /etc/pacman.d/mirrorlist
# Archlinuxcn - https://github.com/archlinuxcn/mirrorlist-repo

# Сохраним резервную копию
cp -n /etc/pacman.conf /etc/pacman.conf.bak
# Archlinux
echo -e '[options]
HoldPkg = pacman glibc
Architecture = auto
Color
CheckSpace
DisableDownloadTimeout
ParallelDownloads = 10
\nSigLevel = Never
LocalFileSigLevel = Never
\n[core]
Include = /etc/pacman.d/mirrorlist
\n[extra]
Include = /etc/pacman.d/mirrorlist
\n[community]
Include = /etc/pacman.d/mirrorlist
\n[multilib]
Include = /etc/pacman.d/mirrorlist' > /etc/pacman.conf
# Archlinuxcn
echo -e '\n[archlinuxcn]
Include = /etc/pacman.d/mirrorlist-archlinuxcn' >> /etc/pacman.conf
echo -e '## Germany
Server = https://mirror.xtom.de/archlinuxcn/$arch
\n## Netherlands
Server = https://mirror.xtom.nl/archlinuxcn/$arch
Server = https://repo.archlinuxcn.org/$arch
\n## Estonia
Server = https://mirror.xtom.ee/archlinuxcn/$arch
\n## Global
Server = https://mirrors.cloud.tencent.com/archlinuxcn/$arch
Server = https://mirrors.aliyun.com/archlinuxcn/$arch
Server = https://repo.huaweicloud.com/archlinuxcn/$arch' > /etc/pacman.d/mirrorlist-archlinuxcn
# Chaotic-aur
echo -e '\n[chaotic-aur]
Include = /etc/pacman.d/mirrorlist-chaoticaur' >> /etc/pacman.conf
echo -e '## Germany
Server = https://de-mirror.chaotic.cx/$repo/$arch
Server = https://de-2-mirror.chaotic.cx/$repo/$arch
Server = https://de-3-mirror.chaotic.cx/$repo/$arch
Server = https://de-4-mirror.chaotic.cx/$repo/$arch
\n## Bulgaria
Server = https://bg-mirror.chaotic.cx/$repo/$arch' > /etc/pacman.d/mirrorlist-chaoticaur

#------------------------------------------------------------------------------

# Для ядра linux-lqx добавляем репозиторий и ключи проверки безопасности
if pacman -Qi linux-lqx > /dev/null; then
    echo -e '\n[liquorix]
    Server = https://liquorix.net/archlinux/$repo/$arch' >> /etc/pacman.conf
    pacman-key --recv-key 9AE4078033F8024D --keyserver keyserver.ubuntu.com
    pacman-key --lsign-key 9AE4078033F8024D
fi

# Включение проверки безопасности GnuPG
if [[ $(cat /etc/*-release | grep NAME) != *'Arch Linux'* ]]; then
    pacman-key --recv-key FBA220DFC880C036 --keyserver keyserver.ubuntu.com
    pacman-key --lsign-key FBA220DFC880C036
    pacman --noconfirm -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst'
    pacman --noconfirm -Syy archlinux-keyring archlinuxcn-keyring
    sed -i "s|^SigLevel = Never|SigLevel = Required DatabaseOptional|" /etc/pacman.conf
    sed -i "s|^LocalFileSigLevel = Never|LocalFileSigLevel = Optional|" /etc/pacman.conf
fi

###############################################################################

## Настройка Grub ##

# Отключаем загрузочное меню grub.
sed -i 's|^GRUB_TIMEOUT=5|GRUB_TIMEOUT=0|' /etc/default/grub
# Генерируем файл конфигурации grub
grub-mkconfig -o /boot/grub/grub.cfg

###############################################################################

## Локализация системы и консоли ##

# Раскоментируем локали en_US и ru_RU
sed -i 's|^#en_US.UTF-8|en_US.UTF-8|' /etc/locale.gen
sed -i 's|^#ru_RU.UTF-8|ru_RU.UTF-8|' /etc/locale.gen
# Устанавливаем язык будущей системы
echo 'LANG=ru_RU.UTF-8' > /etc/locale.conf
# Русифицируем консоль, прописываем локаль и шрифт
echo -e 'KEYMAP=ru\nFONT=cyr-sun16' > /etc/vconsole.conf
# Генерируем локали
locale-gen

###############################################################################

## Установка поддержки сети, vpn, ssh, ntp ##

# Устанавливаем networkmanager, vpn, ssh, ntp
pacman --noconfirm -S networkmanager networkmanager-openvpn openssh ntp
# Включаем загрузку демонов (служб) при старте системы
systemctl enable NetworkManager sshd ntpd
systemctl mask NetworkManager-wait-online.service

#------------------------------------------------------------------------------

# Для виртуальной машины включаем root-доступ по ssh (Опционально)
if [[ $(lspci | grep VGA) == *'VMware'*  ]]; then
    sed -i 's|^#PermitRootLogin prohibit-password|PermitRootLogin yes|' /etc/ssh/sshd_config
    # Проверяем результат
    cat /etc/ssh/sshd_config | grep '^PermitRootLogin'
fi

###############################################################################

## Настройки сетевых параметров ##

# Прописываем сетевое имя компьютера
echo "$HOSTNAME" > /etc/hostname
# Настройка файла hosts
echo "127.0.0.1    localhost" > /etc/hosts
echo "::1          localhost" >> /etc/hosts
echo "127.0.1.1    $HOSTNAME.localdomain $HOSTNAME" >> /etc/hosts

###############################################################################

## Создание пользователя и его каталогов ##

# Создаём нового пользователя
useradd -m -g users -G video,audio,games,lp,optical,power,storage,wheel -s /bin/bash $USERNAME
# Задаём пароль руту и новому пользователю
echo "root:$ROOTPASS" | chpasswd
echo "$USERNAME:$USERPASS" | chpasswd
# Включаем группу wheel для возможности использования команды sudo
sed -i 's|^# %wheel ALL=(ALL:ALL) ALL|%wheel ALL=(ALL:ALL) ALL|' /etc/sudoers
# Устанавливаем пакет поддержки каталогов пользователя
pacman --noconfirm -S xdg-user-dirs

#------------------------------------------------------------------------------

# Создание каталогов пользователя на английском языке (Опционально) #

# Создание каталогов пользователя
mkdir -p /home/$USERNAME/{desktop,downloads,templates,public,documents,music,pictures,videos}
# Создание "служебных" каталогов
mkdir -p /home/$USERNAME/{.config,.icons,.themes}
# Прописываем в файл конфигурации XDG, ссылки на созданные ранее каталоги
echo -e 'XDG_DESKTOP_DIR="$HOME/desktop"
XDG_DOWNLOAD_DIR="$HOME/downloads"
XDG_TEMPLATES_DIR="$HOME/templates"
XDG_PUBLICSHARE_DIR="$HOME/public"
XDG_DOCUMENTS_DIR="$HOME/documents"
XDG_MUSIC_DIR="$HOME/music"
XDG_PICTURES_DIR="$HOME/pictures"
XDG_VIDEOS_DIR="$HOME/videos"' > /home/$USERNAME/.config/user-dirs.dirs
# Устанавливаем права доступа и владельца на каталоги и файлы в домашней папке пользователя
chmod -R 755 /home/$USERNAME && chown -R $USERNAME:users /home/$USERNAME
# Проверяем результат
ls --color -la /home/$USERNAME

###############################################################################

## Установка часового пояса и времени ##

# Задаём часовой пояс
ln -sf /usr/share/zoneinfo/$TIMEZONE /etc/localtime
# Устанавливаем время по UTC
hwclock --systohc --utc

###############################################################################

## Установка демонов (служб) для оптимизации и ускорения работы системы (Опционально) ##

# systemd-swap - Script for creating hybrid swap space from zram swaps, swap files and swap partitions
# ananicy-cpp, ananicy-rules-git - Another auto nice daemon, with community rules support (Ananicy-cpp is a full rewrite of Ananicy in C++, featuring lower CPU and RAM usage)
# nohang - A sophisticated low memory handler
# dbus-broker - Linux D-Bus Message Broker
# auto-cpufreq - Automatic CPU speed & power optimizer
pacman --noconfirm -S systemd-swap ananicy-cpp ananicy-rules-git nohang dbus-broker auto-cpufreq
# Раскоментируем параметры в файле конфигурации systemd-swap
sed -i 's|^#zram_|zram_|g' /etc/systemd/swap.conf
# Включим использование systemd-swap
sed -i 's|^zram_enabled=0|zram_enabled=1|' /etc/systemd/swap.conf
# Отведем для zswap, вместо четверти, половину оперативной памяти
sed -i 's|RAM_SIZE / 4|RAM_SIZE / 2|' /etc/systemd/swap.conf
# Включаем загрузку демонов при старте системы
systemctl enable systemd-swap ananicy-cpp nohang dbus-broker auto-cpufreq

###############################################################################

## Консольные утилиты ##

# git - Работа с GitHub
# wget - Консольный загрузчик
# yay - Установщик пакетов из AUR
pacman --noconfirm -S git wget yay

###############################################################################
###### При установке консольной версии, переходим к завершению установки ######
###############################################################################

## Установка драйверов ##

# Видео #

if [[ $(lspci | grep VGA) == *'Intel'*  ]]; then
    pacman --noconfirm -S mesa lib32-mesa vulkan-intel lib32-vulkan-intel vulkan-icd-loader lib32-vulkan-icd-loader
fi
if [[ $(lspci | grep VGA) == *'AMD'*  ]]; then
    pacman --noconfirm -S mesa lib32-mesa vulkan-radeon lib32-vulkan-radeon vulkan-icd-loader lib32-vulkan-icd-loader
fi
if [[ $(lspci | grep VGA) == *'NVIDIA'*  ]]; then
    # Свободный драйвер nVidia
    #sudo pacman -S mesa lib32-mesa xf86-video-nouveau vulkan-icd-loader lib32-vulkan-icd-loader
    # Проприетарный драйвер nVidia
    sudo pacman -S nvidia-dkms nvidia-utils lib32-nvidia-utils nvidia-settings vulkan-icd-loader lib32-vulkan-icd-loader opencl-nvidia lib32-opencl-nvidia
    nvidia-xconfig --cool-bits=4 # Доступ к контролю вращения вентиляторов
fi
if [[ $(lspci | grep VGA) == *'VMware'*  ]]; then
    pacman --noconfirm -S xf86-video-vesa virtualbox-guest-utils
fi

#------------------------------------------------------------------------------

# Аудио #

# Pulseaudio
pacman --noconfirm -S pulseaudio pulseaudio-alsa pulseaudio-jack jack2-dbus

# PipeWire
#pacman --noconfirm -S pipewire pipewire-alsa pipewire-pulse pipewire-jack gst-plugin-pipewire

# ALSA
#sudo pacman -S alsa alsa-utils alsa-firmware alsa-card-profiles alsa-plugins

###############################################################################

## Определение общих пакетов для установки вместе с окружением рабочего стола ##

# Приложения #
# p7zip unrar unace lrzip - Работа с архивами
# fuse - Поддержка запуска AppImage
# cifs-utils - Поддержка подключения к Samba
# davfs2 - Поддержка WebDAV (например для Yandex Disk)
# gvfs gvfs-smb gvfs-nfs nfs-utils - Поддержка сетевых дисков и отображение их в файловых менеджерах
# gvfs-mtp - Virtual filesystem implementation for GIO (MTP backend; Android, media player)
# gvfs-google - Virtual filesystem implementation for GIO (Google Drive backend)
# neofetch - Информация о системе в консоли
UTILITIES="p7zip unrar unace lrzip fuse cifs-utils davfs2 gvfs gvfs-smb gvfs-nfs gvfs-mtp gvfs-google nfs-utils neofetch"
# pamac-aur - Графический установщик пакетов Pamac
# archlinux-appstream-data-pamac - Пакет для правильного отображения каталога программ в Pamac
PAMAC_GTK="pamac-aur archlinux-appstream-data-pamac"

# Шрифты #
FONTS="ttf-ms-fonts ttf-ubuntu-font-family gnu-free-fonts ttf-liberation ttf-dejavu ttf-droid ttf-hack ttf-roboto ttf-roboto-mono noto-fonts ttf-meslo-nerd-font-powerlevel10k"

# Темы оформления #
GTK_THEMES="qogir-icon-theme papirus-icon-theme matcha-gtk-theme mint-y-icons mint-x-icons mint-themes-legacy mint-themes qt5ct qt6-base adwaita-qt"
QT_THEMES="qogir-icon-theme kde-gtk-config breeze-gtk"

###############################################################################
##################### Установка окружения рабочего стола ######################
###############################################################################

## Установка XFCE ##
# https://archlinux.org/groups/x86_64/xfce4/
# https://archlinux.org/groups/x86_64/xfce4-goodies/

# exo ... xfwm4 - Установка XFCE
# xfce4-xkb-plugin - Плагин раскладки клавиатуры
# xfce4-pulseaudio-plugin - Плагин управления звуком
# xfce4-clipman-plugin - Плагин расширенного буфера обмена
# xfce4-whiskermenu-plugin - Современное меню
# xfce4-weather-plugin - Плагин погоды
# xfce4-screenshooter - Создание скриншотов через Print Screen
# pavucontrol - Панель управления звуком для Pulseaudio и Pipeware
# network-manager-applet - Утилита для отображения Network Manager в трее
# gnome-system-monitor - Мониторинг системы
# xed - Простой текстовый редактор
# tilix - Тайлинговый эмулятор терминала
# menulibre - Редактор меню XFCE
# $UTILITIES $PAMAC_GTK $FONTS $GTK_THEMES - Установка ранее выбранных общих пакетов
pacman --noconfirm -S exo garcon thunar-volman thunar-archive-plugin xfce4-appfinder xfce4-panel \
    xfce4-power-manager xfce4-session xfce4-settings xfconf xfdesktop gcolor3 xfwm4 xfce4-xkb-plugin \
    xfce4-pulseaudio-plugin xfce4-clipman-plugin xfce4-whiskermenu-plugin xfce4-weather-plugin \
    xfce4-screenshooter pavucontrol network-manager-applet gnome-system-monitor xed tilix menulibre \
    $UTILITIES $PAMAC_GTK $FONTS $GTK_THEMES

# Отключение, раздражающего звука, pc-спикера
echo 'blacklist pcspkr' > /etc/modprobe.d/nobeep.conf

# Настройка QT тем в GTK окружении
echo 'export QT_QPA_PLATFORMTHEME=qt5ct' | tee -a /etc/profile > /dev/null

# Настройка Tilix для правильного разделения терминала
echo -e '\n#Для терминала Tilix
if [[ $TILIX_ID ]]; then
    source /etc/profile.d/vte.sh
fi' | tee -a /home/$USERNAME/.bashrc /root/.bashrc > /dev/null

# Минимальный набор программ (Опционально)
# galculator - Калькулятор
# xarchiver - Работа с архивами
# xviewer xviewer-plugins - Просмотр фото
# xreader - Просмотр документов
# foliate - Чтение книг
pacman --noconfirm -S galculator xarchiver xviewer xviewer-plugins xreader foliate

#------------------------------------------------------------------------------

## Установка Plasma ##
# https://archlinux.org/groups/x86_64/plasma/
# https://archlinux.org/groups/x86_64/kde-applications/

# plasma-desktop - Минимальная установка Plasma
# kwin-lowlatency - Улучшенная отрисовка окон
# kscreen - Утилита управления мониторами
# powerdevil - Утилита управления питанием
# copyq - Расширенный буфер обмена
# plasma-pa - Апплет управления звуком
# plasma-nm - Апплет управления Network Manager
# konsole - Эмулятор терминала
# kwrite - Простой текстовый редактор
# dolphin dolphin-plugins - Файловый менеджер
# plasma-systemmonitor - Системный монитор
# kinfocenter - Сведения о системе
# $UTILITIES $PAMAC_GTK $FONTS $QT_THEMES - Установка ранее выбранных общих пакетов
# pamac-tray-icon-plasma - Утилита для отображения Pamac в трее Plasma
pacman --noconfirm -S plasma-desktop kwin-lowlatency kscreen powerdevil copyq plasma-pa plasma-nm \
    konsole kwrite dolphin dolphin-plugins plasma-systemmonitor kinfocenter \
    $UTILITIES $PAMAC_GTK $FONTS $QT_THEMES pamac-tray-icon-plasma

# Минимальный набор программ (Опционально)
# kcalc - Калькулятор
# ark - Работа с архивами
# gwenview kimageformats qt5-imageformats - Просмотр фото
# okular poppler-data - Просмотр документов
# foliate - Чтение книг
pacman --noconfirm -S kcalc ark gwenview kimageformats qt5-imageformats okular poppler-data foliate

#------------------------------------------------------------------------------

## Установка Mate ##
# https://archlinux.org/groups/x86_64/mate/
# https://archlinux.org/groups/x86_64/mate-extra/

# mate-desktop ... marco - Установка Mate
# network-manager-applet - Утилита для отображения Network Manager в трее
# mozo - Редактор меню
# caja - Файловый менеджер
# pluma - Простой текстовый редактор
# tilix - Тайлинговый эмулятор терминала
# $UTILITIES $PAMAC_GTK $FONTS $GTK_THEMES - Установка ранее выбранных общих пакетов
pacman --noconfirm -S mate-desktop mate-panel mate-menus mate-power-manager \
    mate-session-manager mate-settings-daemon mate-notification-daemon mate-polkit \
    mate-control-center mate-media mate-tweak marco network-manager-applet mozo caja \
    pluma tilix $UTILITIES $PAMAC_GTK $FONTS $GTK_THEMES

# Настройка QT тем в GTK окружении
echo 'export QT_QPA_PLATFORMTHEME=qt5ct' | tee -a /etc/profile > /dev/null

# Настройка Tilix для правильного разделения терминала
echo -e '\n#Для терминала Tilix
if [[ $TILIX_ID ]]; then
    source /etc/profile.d/vte.sh
fi' | tee -a /home/$USERNAME/.bashrc /root/.bashrc > /dev/null

# Минимальный набор программ (Опционально)
# galculator - Калькулятор
# engrampa - Работа с архивами
# eom - Просмотр фото
# atril - Просмотр документов
# foliate - Чтение книг
pacman --noconfirm -S galculator engrampa eom atril foliate

#------------------------------------------------------------------------------

## Установка Gnome ##
# https://archlinux.org/groups/x86_64/gnome/
# https://archlinux.org/groups/x86_64/gnome-extra/

# gnome-shell-performance - Установка оптимизированного Gnome
# mutter-performance - Улучшенная отрисовка окон
# gnome-control-center - Панель настроек Gnome
# gnome-tweak-tool - Дополнительные настройки Gnome
# caffeine-ng - Предотвращение активации экранной заставки
# nautilus libnautilus-extension - Файловый менеджер
# gnome-screenshot - Создание скриншотов через Print Screen
# gedit - Простой текстовый редактор
# tilix - Тайлинговый эмулятор терминала
# gnome-system-monitor - Мониторинг системы
# $UTILITIES $PAMAC_GTK $FONTS $GTK_THEMES - Установка ранее выбранных общих пакетов
pacman --noconfirm -S gnome-shell-performance mutter-performance gnome-control-center \
    gnome-tweak-tool caffeine-ng nautilus libnautilus-extension gnome-screenshot gedit tilix \
    gnome-system-monitor $UTILITIES $PAMAC_GTK $FONTS $GTK_THEMES

# Настройка QT тем в GTK окружении
echo 'export QT_QPA_PLATFORMTHEME=qt5ct' | tee -a /etc/profile > /dev/null

# Настройка Tilix для правильного разделения терминала
echo -e '\n#Для терминала Tilix
if [[ $TILIX_ID ]]; then
    source /etc/profile.d/vte.sh
fi' | tee -a /home/$USERNAME/.bashrc /root/.bashrc > /dev/null

# Минимальный набор программ (Опционально)
# gnome-calculator - Калькулятор
# file-roller - Работа с архивами
# eog - Просмотр фото
# evince - Просмотр документов
# foliate - Чтение книг
pacman --noconfirm -S gnome-calculator file-roller eog evince foliate

###############################################################################

## Установка Display Manager (Выбрать один из вариантов) ##

# LXDM
pacman --noconfirm -S lxdm-gtk3 && systemctl enable lxdm.service

#------------------------------------------------------------------------------

# Lightdm
pacman --noconfirm -S lightdm lightdm-gtk-greeter && systemctl enable lightdm.service

#------------------------------------------------------------------------------

# SDDM - Рекомендуется для Plasma
pacman --noconfirm -S sddm sddm-kcm && systemctl enable sddm.service

#------------------------------------------------------------------------------

# GDM - Рекомендуется для Gnome
pacman --noconfirm -S gdm && systemctl enable gdm.service

###############################################################################
################################# Настройки ###################################
###############################################################################

# Уменьшение времени ожидания "зависших" приложений с 90 до 10 секунд
sed -i 's|^#DefaultTimeoutStopSec=90s|DefaultTimeoutStopSec=10s|' /etc/systemd/system.conf

# Задаем максимальный размер systemd-журнала - 50Mb
sed -i 's|^#SystemMaxUse=|SystemMaxUse=50M|' /etc/systemd/journald.conf

# Включаем TRIM — очень полезно для SSD
systemctl enable fstrim.timer

###############################################################################
############################ Завершение установки #############################
###############################################################################

# Выход из chroot
exit

# Отключаем свопфайл, отмонтируем разделы и перезагружаемся
swapoff /mnt/@swap/swapfile > /dev/null
swapoff /mnt/mnt/swapfile > /dev/null
umount -R /mnt > /dev/null
reboot

###############################################################################
############################# После перезагрузки ##############################
###############################################################################

## Автологин в Display Manager ##

# LightDM:
sudo groupadd -r autologin && sudo gpasswd -a ${USER} autologin
sudo sed -i "s/^#pam-service=lightdm/pam-service=lightdm/" /etc/lightdm/lightdm.conf
sudo sed -i "s/^#pam-autologin-service=lightdm-autologin/pam-autologin-service=lightdm-autologin/" /etc/lightdm/lightdm.conf
sudo sed -i "s/^#autologin-user=/autologin-user=${USER}/" /etc/lightdm/lightdm.conf
sudo sed -i "s/^#autologin-user-timeout=0/autologin-user-timeout=0/" /etc/lightdm/lightdm.conf

#------------------------------------------------------------------------------

# SDDM:
sudo mkdir -p /etc/sddm.conf.d
sudo touch /etc/sddm.conf.d/autologin.conf
echo -e "[Autologin]\nUser=${USER}\nSession=plasma" | sudo tee /etc/sddm.conf.d/autologin.conf

#------------------------------------------------------------------------------

# GDM:
echo -e "[daemon]\nAutomaticLoginEnable=true\nAutomaticLogin=${USER}" | sudo tee -a /etc/gdm/custom.conf

#------------------------------------------------------------------------------

# LXDM:
sudo sed -i "s|^# autologin=dgod|autologin=${USER}|" /etc/lxdm/lxdm.conf

###############################################################################

## Браузеры ##

# Midori
yay --noconfirm -S midori

# LibreWolf
yay --noconfirm -S librewolf-bin

# Vivaldi
yay --noconfirm -S vivaldi

# Brave Browser
yay --noconfirm -S brave-bin

# Chromium
yay --noconfirm -S chromium

# Firefox
yay --noconfirm -S firefox firefox-i18n-ru

###############################################################################

## Утилиты (Опционально) ##

# Принтер:
# XFCE, Mate, Gnome
pacman --noconfirm -S cups cups-pdf system-config-printer
sudo systemctl enable --now cups.service
# Plasma
sudo pacman --noconfirm -S cups cups-pdf print-manager
sudo systemctl enable --now cups.service

# Bluetooth:
# XFCE, Mate, Gnome
sudo pacman --noconfirm -S blueman
sudo systemctl enable --now bluetooth
# Plasma
sudo pacman --noconfirm -S bluedevil
sudo systemctl enable --now bluetooth

# Брандмауэр (Firewall):
# XFCE, Mate, Gnome
sudo pacman --noconfirm -S ufw
sudo systemctl enable --now ufw.service
# Plasma
sudo pacman --noconfirm -S ufw plasma-firewall
sudo systemctl enable --now ufw.service

###############################################################################
