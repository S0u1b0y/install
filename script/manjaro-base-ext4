#!/bin/bash

# Приём входных данных для дальнейшей установки:
# disk     - Установочный диск
# rootpart - Размер root-раздела
# bootpart - Размер boot-раздела
# swapfile - Размер файла подкачки
# kernel   - Версия ядра
disk=$1
rootpart=$2
bootpart=$3
swapfile=$3
kernel=$4

# Настроим Pacman, пропишем вручную региональные зеркала репозитория и перечитаем репозитории:
sed -i 's/#ParallelDownloads = 5/ParallelDownloads = 10/g' /etc/pacman.conf
echo -e '## Russia
Server = https://mirror.yandex.ru/mirrors/manjaro/stable/$repo/$arch
Server = https://mirror.truenetwork.ru/manjaro/stable/$repo/$arch' | tee /etc/pacman.d/mirrorlist
pacman --noconfirm -Syy

# Если примонтированы диски, то отмонтируем их
umount -R /mnt

# Определяем UEFI или BIOS на компьютере:
if [ -d /sys/firmware/efi ]; then
    ## Если UEFI:
    # Создаем три раздела Root(40Gb-sda1), Home(Остальное-sda2) и EFI(300Mb-sda3):
    parted -s $disk -- mktable gpt \
        mkpart Root ext4 1M $rootpart \
        mkpart Home ext4 $rootpart \-$bootpart \
        mkpart EFI fat32 \-$bootpart 100% \
    set 3 esp on
    # Форматируем разделы sda1 и sda2 в ext4, а раздел sda3 в fat32:
    mkfs.ext4 -L Root $disk\1
    mkfs.ext4 -L Home $disk\2
    mkfs.fat -F32 $disk\3
    # Примонтируем раздел sda1 в /mnt:
    mount $disk\1 /mnt
    # Создаем каталоги /mnt/home и /mnt/boot/efi:
    mkdir -p /mnt/{home,boot/efi}
    # Примонтируем раздел sda2 в /mnt/home:
    mount $disk\2 /mnt/home
    # Примонтируем раздел sda3 в /mnt/boot/efi:
    mount $disk\3 /mnt/boot/efi
else
    ## Если BIOS:
    # Создаем два раздела Root(40Gb-sda1) и Home(Остальное-sda2):
    parted -s $disk mktable msdos \
        mkpart primary ext4 1M $rootpart \
        mkpart primary ext4 $rootpart 100% \
    set 1 boot on
    # Форматируем разделы в ext4 с метками Root и Home соответственно:
    mkfs.ext4 -L Root $disk\1
    mkfs.ext4 -L Home $disk\2
    # Примонтируем раздел sda1 в /mnt:
    mount $disk\1 /mnt
    # Создаем каталог /mnt/home:
    mkdir -p /mnt/home
    # Примонтируем раздел sda2 в /mnt/home,
    mount $disk\2 /mnt/home
fi

# Ставим базовую систему:
# base, base-devel - Базовая система и пакеты для компиляции,
# $kernel $kernel\-headers - Ядро (см. переменную kernel),
# linux-firmware - Драйвера,
# nano - Простой консольный текстовый редактор.
# wget - Консольный загрузчик,
# Определяем из какого дистрибутива идет установка:
if [ $(cat /etc/*-release | grep -w DISTRIB_ID | cut -d= -f2 | tr -d '"') = ManjaroLinux ]; then
    # Если ставим из Manjaro:
    basestrap /mnt base base-devel $kernel $kernel\-headers nano wget
    # Генерируем fstab по UUID:
    fstabgen -U /mnt > /mnt/etc/fstab
else
    # Если ставим из Arch:
    pacstrap /mnt base base-devel $kernel $kernel\-headers nano wget
    # Генерируем fstab по UUID:
    genfstab -U /mnt > /mnt/etc/fstab
fi

# Определяем по видеокарте виртуальную машину
# И если компьютер не виртуальный, то ставим пакет драйверов, на виртуальном он не нужен.
if [[ $(LC_ALL=C lspci | grep -i '.* VGA .*') != *' VMware '* ]]; then
    basestrap /mnt linux-firmware
fi

## Настроим параметры запуска системы на ext4 (Меняем udev на systemd):
sed -i 's/HOOKS=(base udev autodetect modconf block filesystems keyboard fsck)/HOOKS=(base systemd autodetect modconf block filesystems keyboard fsck)/' /mnt/etc/mkinitcpio.conf

## Grub ##
# Определяем UEFI или BIOS на компьютере:
if [ -d /sys/firmware/efi ]; then
    ## Если UEFI:
    # Устанавливаем grub в систему
    basestrap /mnt grub efibootmgr
    # Устанавливаем grub на диск
    grub-install --target=x86_64-efi --root-directory=/mnt --bootloader-id=grub --efi-directory=/boot/efi
else
    ## Если BIOS:
    # Устанавливаем grub в систему
    basestrap /mnt grub
    # Устанавливаем grub на диск
    grub-install --target=i386-pc --root-directory=/mnt $disk
fi

## Swapfile ##
# Если параметр swapfile не 0, то создаём файл подкачки:
if [ $swapfile != 0 ]; then
    # Переходим в mnt установленной системы
    cd /mnt/mnt
    # Создаём файл нужного размера
    dd if=/dev/zero of=./swapfile bs=1M count=$swapfile status=progress
    # Разрешаем доступ к файлу подкачки только root-у
    chmod 600 ./swapfile
    # Инициализируем файл подкачки и включаем его
    mkswap ./swapfile
    swapon ./swapfile
    # Прописываем в fstab, автомонтирование файла подкачки при загрузке системы 
    echo -e '# Swapfile\n/mnt/swapfile none swap sw 0 0' | sudo tee -a /mnt/etc/fstab
    # Проверяем
    swapon -s
fi

# Проверяем fstab:
cat /mnt/etc/fstab
