#!/bin/bash

#### Установка Arch KDE Plasma ####

### Подготовка ###

# Скачиваем образ Manjaro Minimal для установки Manjaro или Archlinux - https://manjaro.org/downloads/official/xfce/
# Или скачиваем образ EndeavourOS для установки только Archlinux - https://endeavouros.com/latest-release/
# Записываем образ на флешку, например програмой Ventoy - https://github.com/ventoy/Ventoy/releases
# Загружаемся с записанного образа,

# Запускаем эмулятор терминала.
# Переходим в учётную запись рута:
sudo su

## Настройка Pacman и репозиториев ##
# Передаваемые скрипту параметры:
# 1й - Устанавливаемая система, значения: archlinux или manjaro.
# 2й - Зеркала страны, значения: ru - Россия, ua - Украина, by - Белоруссия, kz - Казахстан, если страна не указана или указана неправильно, то будут прописаны только глобальные репозитории.

# Для установки Arch:
curl -O "https://raw.githubusercontent.com/S0u1b0y/install/Instructions/pacman-prepare"
sh pacman-prepare archlinux ru

# Для установки Manjaro:
curl -O "https://raw.githubusercontent.com/S0u1b0y/install/Instructions/pacman-prepare"
sh pacman-prepare manjaro ru

#-----------------------------------------------------------------

pacman --noconfirm -S code firefox firefox-i18n-ru (uBlock Origin, Audio Equalizer)

#-----------------------------------------------------------------

### Установка ###
# Разметка, форматирование диска и установка базовой системы.
# Внимание!!! Запускаем только один из двух скриптов, в зависимости от устанавливаемой файловой системы:

## Btrfs ##
# Внимание!!! Все данные с указанного диска будут СТЁРТЫ!!!
# Для UEFI скрипт создаёт два раздела: основной с тремя подтомами @root, @home, @snapshot и boot/efi
# Для BIOS скрипт создаёт один основной раздел с тремя подтомами @root, @home и @snapshot
# Передаваемые скрипту параметры:
# 1й - файловая система (возможны 2 параметра: btrfs или ext4)
# 2й - имя диска,
# 3й - устанавливаемое ядро (linux-lts - LTS-ядро, linux - Последняя стабильная версия),
# 4й - размер файла подкачки в мегабайтах (8192 = 8х1024 = 8Gb), 0 - не создавать,
# 5й - размер boot/efi-раздела,
# 6й - размер root-раздела для ext4 (под раздел home - всё остальное пространство).
# Archlinux
curl -O "https://raw.githubusercontent.com/S0u1b0y/install/Instructions/arch-base"
sh arch-base btrfs /dev/sda linux 8192 300M

# Manjaro
curl -O "https://raw.githubusercontent.com/S0u1b0y/install/Instructions/arch-base"
sh arch-base btrfs /dev/sda linux515 8192 300M

## Ext4 ##
# Внимание!!! Все данные с указанного диска будут СТЁРТЫ!!!
# Для UEFI скрипт создаёт три раздела: root, home и boot/efi
# Для BIOS скрипт создаёт два раздела: root, home
# Передаваемые скрипту параметры смотри в описании btrfs
# Archlinux
curl -O "https://raw.githubusercontent.com/S0u1b0y/install/Instructions/arch-base"
sh arch-base ext4 /dev/sda linux 8192 300M 40G
# Manjaro
curl -O "https://raw.githubusercontent.com/S0u1b0y/install/Instructions/arch-base"
sh arch-base ext4 /dev/sda linux515 8192 300M 40G

#-----------------------------------------------------------------

## Чрутимся:
# Если ставим из Manjaro
manjaro-chroot /mnt
# Если ставим из Endeavour или Arch
arch-chroot /mnt

#-----------------------------------------------------------------

## Установка основной системы ##

# Передаваемые скрипту параметры:
# 1й - имя пользователя
# 2й - имя компьютера в сети
# 3й - часовой пояс.
cd /tmp && curl -O "https://raw.githubusercontent.com/S0u1b0y/install/Instructions/arch-system"
sh arch-system user virt Europe/Moscow

cd /tmp && curl -O "https://raw.githubusercontent.com/S0u1b0y/install/Instructions/arch-system"
sh arch-system soulboy main Europe/Moscow

#-----------------------------------------------------------------

#Если, на компьютере, есть MS Windows, то установим локальное время:
hwclock --systohc --localtime && date

#Если, на компьютере, только GNU/Linux, то установим время по UTC:
hwclock --systohc --utc && date

#-----------------------------------------------------------------

## Zswap - подкачка в оперативной памяти (Опционально) ##

# Устанавливаем (строка 1)
# Раскоментируем параметры в файле конфигурации (строка 2)
# Включим использование (строка 3)
# Отведем для zswap, вместо четверти, половину оперативной памяти (строка 4)
# Включаем загрузку при старте системы (строка 5)
sudo pacman --noconfirm -S systemd-swap
sudo sed -i 's/#zram_/zram_/g' /etc/systemd/swap.conf
sudo sed -i 's/zram_enabled=0/zram_enabled=1/' /etc/systemd/swap.conf
sudo sed -i 's/RAM_SIZE \/ 4/RAM_SIZE \/ 2/' /etc/systemd/swap.conf
sudo systemctl enable --now systemd-swap.service

#-----------------------------------------------------------------

## Статический IP (Опционально) ##

# Данные (netface, ipaddr, gateway) поменяйте на свои (строки 1-3),
# Имя сетевого интерфейса (переменная netface) можно узнать можно командой - ip a
# Делаем резервную копию файла настроек, на всякий случай (строка 4),
# Прописываем, в файл конфигурации, параметры настройки сети (строки 5-8),
netface=enp0s3
ipaddr=192.168.0.50
gateway=192.168.0.100
cp /etc/dhcpcd.conf /etc/dhcpcd.conf.bak
echo -e "interface $netface" > /etc/dhcpcd.conf
echo -e "static ip_address=$ipaddr/24" >> /etc/dhcpcd.conf
echo -e "static routers=$gateway" >> /etc/dhcpcd.conf
echo -e "static domain_name_servers=$gateway" >> /etc/dhcpcd.conf

#-----------------------------------------------------------------

## Драйвера для ноутбука ##

# Драйвер тачпада:
pacman --noconfirm -S xf86-input-synaptics
# Управление гибридной графикой Optimus Manager:
yay -S optimus-manager optimus-manager-qt
sudo systemctl enable optimus-manager

#-----------------------------------------------------------------

## Установка KDE Plasma ##

# Минимальная установка:
# sddm, sddm-kcm - Загрузчик и настройщик загрузчика,
# plasma-desktop - Минимальная установка Plasma,
# kscreen - Утилита управления мониторами,
# powerdevil - Утилита управления питанием,
# plasma-pa - Апплет управления звуком,
# kinfocenter - Информация о системе,
# plasma-systemmonitor - Системный монитор,
# kinit - Ускорение запуска приложений KDE,
# kde-gtk-config, breeze-gtk - Настройка тем GTK в QT и тема GTK,
# konsole - Эмулятор терминала,
# kwrite - Простой текстовый редактор,
# kcalc - Калькулятор,
# dolphin dolphin-plugins - Файловый менеджер,
# plasma-browser-integration - Интеграция Plasma и популярных браузеров,
# gwenview, kimageformats, qt5-imageformats - Просмотр фото,
# okular, poppler-data - Просмотр документов,
# foliate - Читалка книг,
# ark - Работа с архивами,
sudo pacman --noconfirm -S sddm sddm-kcm plasma-desktop kscreen powerdevil plasma-pa kinfocenter \
    plasma-systemmonitor kinit kde-gtk-config breeze-gtk konsole kwrite kcalc dolphin dolphin-plugins \
    plasma-browser-integration
sudo systemctl enable sddm.service

#-----------------------------------------------------------------

# Завершаем установку, выходим (Ctrl+D) и перезагружаемся:
reboot

#-----------------------------------------------------------------
#-----------------------------------------------------------------

#### После перезагрузки ####

# Создаем каталоги пользователя в домашней папке на английском языке:
sudo pacman --noconfirm -S xdg-user-dirs && LC_ALL=C xdg-user-dirs-update --force
# То же самое, но на русском языке:
sudo pacman --noconfirm -S xdg-user-dirs && xdg-user-dirs-update --force

# ***

## Только для Arch ##

# Установим менеджер пакетов yay:
cd /tmp && git clone https://aur.archlinux.org/yay-bin.git && cd yay-bin && makepkg --noconfirm -si

# Дополнительный софт шрифты, иконки и курсоры:
# Вижет погоды (Удаляем города по умолчанию, добавлям нужный +OWM, Нужный город ищем на https://openweathermap.org):
yay --noconfirm -S pamac-aur pamac-tray-icon-plasma plasma5-applets-weather-widget qt5-xmlpatterns qogir-icon-theme

# ***

## Только для Manjaro ##

# Программы Manjaro:
sudo pacman --noconfirm -S manjaro-settings-manager manjaro-settings-manager-kcm manjaro-kde-settings \
    manjaro-browser-settings manjaro-hotfixes pamac-gtk pamac-snap-plugin pamac-flatpak-plugin \
    pamac-tray-icon-plasma
# Оформление Manjaro:
sudo pacman --noconfirm -S plasma5-themes-breath2 plasma5-themes-breath2 sddm-breath2-theme \
    breath2-wallpaper illyria-wallpaper

# Дополнительный софт шрифты, иконки и курсоры:
# Вижет погоды (Удаляем города по умолчанию, добавлям нужный +OWM, Нужный город ищем на https://openweathermap.org):
yay --noconfirm -S plasma5-applets-weather-widget qt5-xmlpatterns qogir-icon-theme

# ***

# Дополнительные программы (Опционально):
# gwenview, kimageformats, qt5-imageformats - Просмотр фото,
# okular, poppler-data - Просмотр документов,
# kcalc - Калькулятор,
# foliate - Читалка книг,
# ark - Работа с архивами,
# gnome-disk-utility - Управление дисками.
sudo pacman --noconfirm -S gwenview kimageformats qt5-imageformats okular poppler-data kcalc foliate \
    ark gnome-disk-utility

#-----------------------------------------------------------------

### Настройки ###

# Установку и настройку Zsh см. в файле https://raw.githubusercontent.com/S0u1b0y/install/Instructions/arch-zsh

# Установим более низкий уровень использования файла подкачки (строка 1),
# Уменьшим время ожидания "зависших" приложений с 90 до 10 секунд (строка 2),
# Зададим максимальный размер systemd-журнала (строка 3).
echo 'vm.swappiness=10' | sudo tee /etc/sysctl.d/99-swappiness.conf
sudo sed -i 's/#DefaultTimeoutStopSec=90s/DefaultTimeoutStopSec=10s/' /etc/systemd/system.conf
sudo sed -i 's/#SystemMaxUse=/SystemMaxUse=50M/' /etc/systemd/journald.conf

# ***

## GRUB (Опционально) ##

# Если есть ещё установленные системы, то ставим дополнительно:
sudo pacman --noconfirm -S os-prober
# И перегенерируем файл конфигурации grub
sudo grub-mkconfig -o /boot/grub/grub.cfg

# Если нет других установленных систем, то убираем загрузочное меню Grub,
# меняя GRUB_TIMEOUT с пяти секунд на ноль.
sudo sed -i 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT=0/g' /etc/default/grub
# И перегенерируем файл конфигурации grub
sudo grub-mkconfig -o /boot/grub/grub.cfg

#-----------------------------------------------------------------

## Программы ##

# Ananicy - Управляет приоритетами приложений:
yay --noconfirm -S ananicy && sudo systemctl enable --now ananicy

# Nohang - Следит за потреблением озу, выгружая неиспользуемые процессы:
yay --noconfirm -S nohang && sudo systemctl enable --now nohang

# Bluetooth (опционально):
sudo pacman --noconfirm -S bluedevil
sudo systemctl enable --now bluetooth

# Управление сетевыми соединениями (опционально):
sudo pacman --noconfirm -S networkmanager plasma-nm
sudo systemctl enable --now NetworkManager
# Плагины NetworkManager для разных типов соединений (опционально):
sudo pacman --noconfirm -S networkmanager-openconnect networkmanager-openvpn networkmanager-pptp networkmanager-vpnc

# Брандмауэр (Firewall) и модуль управления для Plasma (опционально):
sudo pacman --noconfirm -S ufw plasma-firewall
sudo systemctl enable --now ufw.service

# Если нужна поддержка принтера, то ставим:
sudo pacman --noconfirm -S cups cups-pdf print-manager
sudo systemctl enable --now cups.service

# Браузеры:
# Firefox
sudo pacman --noconfirm -S firefox firefox-i18n-ru
# LibreWolf
yay --noconfirm -S librewolf-bin
# Chrome:
yay --noconfirm -S google-chrome
# Chromium
sudo pacman --noconfirm -S chromium

# Мультимедиа:
# audacious - Аудиоплеер,
# mpv - Видеоплеер.
sudo pacman --noconfirm -S audacious mpv

# Torrent:
sudo pacman --noconfirm -S qbittorrent

# Java:
sudo pacman --noconfirm -S jdk-openjdk

# Code OSS (free Visual Studio Code):
yay -S code
# Мои настройки (опционально):
mouseWheelScrollSensitivity - 2
editor.renderWhitespace - none
editor.wordWrap - On
editor.fontSize - 12
editor.dragAndDrop - false
# Сменить язык на русский
Ctrl-Shift-P -> Configure Display Language -> Меняем на Русский

# Работа с видео:
yay -S mediainfo mkvtoolnix-gui

# Мониторинг и разгон для nVidia карт Green With Envy (опционально):
yay --noconfirm -S gwe

# Yandex Disk:
yay --noconfirm -S yandex-disk && yandex-disk setup

#-----------------------------------------------------------------

## Игры ##

# Steam:
sudo pacman --noconfirm -S steam

# PortProton (https://portwine-linux.ru/port-proton-linux):
sudo pacman -S gamemode lib32-gamemode icoutils zenity bubblewrap zstd cabextract tar
wget -c "https://github.com/Castro-Fidel/PortWINE/raw/master/portwine_install_script/PortProton-97"
sh PortProton-97

# Настройка Proton в Steam-клиенте на Linux: В меню (вверху слева) нажимаем: Steam->Настройки,
# выбираем раздел Steam Play (в самом низу) и там ставим галочку "Включить Steam Play для других продуктов",
# жмем ОК. Все Proton включён, можно пытаться запускать Windows-игры.

# Minecraft:
yay -S multimc jre8-openjdk
sudo archlinux-java set java-17-openjdk
java -version

#-----------------------------------------------------------------

## Виртуализация (опционально) ##

# VirtualBox стандартное ядро:
sudo pacman --noconfirm -S virtualbox virtualbox-ext-vnc virtualbox-host-modules-arch
# VirtualBox LTS-ядро:
sudo pacman --noconfirm -S virtualbox virtualbox-ext-vnc virtualbox-host-dkms

# KVM (Qemu):
sudo pacman -S virt-manager bridge-utils dnsmasq dmidecode ebtables iptables openbsd-netcat qemu qemu-arch-extra qemu-guest-agent ovmf vde2
sudo systemctl enable --now libvirtd dnsmasq
sudo gpasswd -a $(whoami) kvm libvirt && newgrp libvirt
sudo sed -i 's/#unix_sock_group = "libvirt"/unix_sock_group = "libvirt"/' /etc/libvirt/libvirtd.conf
sudo sed -i 's/#unix_sock_rw_perms = "0770"/unix_sock_rw_perms = "0770"/' /etc/libvirt/libvirtd.conf
sudo systemctl restart libvirtd.service
