#### Установка Manjaro Gnome ####

### Подготовка ###

# Перейдем в учётную запись рута:
sudo su

# Скачаем необходимые скрипты и дадим им право на запуск:
wget -c "https://raw.githubusercontent.com/S0u1b0y/install/Instructions/script/manjaro-base-btrfs"
wget -c "https://raw.githubusercontent.com/S0u1b0y/install/Instructions/script/manjaro-base-ext4"
wget -c "https://raw.githubusercontent.com/S0u1b0y/install/Instructions/script/manjaro-system"
chmod u+x manjaro*

#-----------------------------------------------------------------

### Установка ###
# Разметка, форматирование диска и установка базовой системы.
# Внимание!!! Запускаем только один из двух скриптов, в зависимости от устанавливаемой файловой системы:

## Btrfs ##
# Внимание!!! Все данные с указанного диска будут СТЁРТЫ!!!
# Для UEFI скрипт создаёт два раздела: /dev/sda1 с двумя подтомами @root и @home и /dev/sda2 - boot/efi
# Для BIOS скрипт создаёт один раздел /dev/sda1 и два подтома @root и @home
# Передаваемые скрипту параметры: 1й - имя диска, 2й - размер boot/efi-раздела,
# 3й - устанавливаемое ядро (linux510 - LTS-ядро, linux515 - Последняя стабильная версия).
sh manjaro-base-btrfs /dev/sda 300M linux515

## Ext4 ##
# Внимание!!! Все данные с указанного диска будут СТЁРТЫ!!!
# Для UEFI скрипт создаёт три раздела: /dev/sda1 - root, /dev/sda2 - home, /dev/sda3 - boot/efi
# Для BIOS скрипт создаёт два раздела: /dev/sda1 - root, /dev/sda2 - home
# Передаваемые скрипту параметры: 1й - имя диска, 2й - размер root-раздела, 3й - размер boot/efi-раздела,
# 4й - устанавливаемое ядро (linux510 - LTS-ядро, linux515 - Последняя стабильная версия).
sh manjaro-base-ext4 /dev/sda 40G 300M linux515

#-----------------------------------------------------------------

# Если вдруг, по какой-то причине, fstab не сгенерировался по UUID,
# то командой blkid смотрим UUID диска /dev/sdX и прописываем его в fstab вместо /dev/sdaX - nano /mnt/etc/fstab.

# Чрутимся:
manjaro-chroot /mnt

#-----------------------------------------------------------------

# Установка основной системы:
# Передаваемые скрипту параметры: 1й - имя пользователя, 2й - имя компьютера в сети, 3й - часовой пояс.
sh manjaro-system user virt Europe/Moscow

#-----------------------------------------------------------------

## Статический IP (Опционально) ##

# Данные (netface, ipaddr, gateway) поменяйте на свои (строки 1-3),
# Имя сетевого интерфейса (переменная netface) можно узнать можно командой - ip a
# Делаем резервную копию файла настроек, на всякий случай (строка 4),
# Прописываем, в файл конфигурации, параметры настройки сети (строки 5-8),
netface=enp0s3
ipaddr=192.168.0.50
gateway=192.168.0.100
cp /etc/dhcpcd.conf /etc/dhcpcd.conf.bak
echo -e "interface $netface" > /etc/dhcpcd.conf
echo -e "static ip_address=$ipaddr/24" >> /etc/dhcpcd.conf
echo -e "static routers=$gateway" >> /etc/dhcpcd.conf
echo -e "static domain_name_servers=$gateway" >> /etc/dhcpcd.conf

#-----------------------------------------------------------------

## Драйвера ##

## Видео:
# AMD:
pacman --noconfirm -S xf86-video-amdgpu vulkan-radeon lib32-vulkan-radeon
# Intel:
pacman --noconfirm -S xf86-video-intel vulkan-intel lib32-vulkan-intel
# nVidia:
pacman --noconfirm -S nvidia nvidia-utils lib32-nvidia-utils nvidia-settings
# VirtualBox:
pacman --noconfirm -S xf86-video-vesa virtualbox-guest-utils

## Для ноутбука:
# Драйвер тачпада:
pacman --noconfirm -S xf86-input-synaptics
# Управление гибридной графикой Optimus Manager:
yay -S optimus-manager && sudo systemctl enable optimus-manager

#-----------------------------------------------------------------

## Установка Gnome ##
# Доп. информация о приложениях ванильного Gnome - https://apps.gnome.org/ru/
# Доп. информация о приложениях Manjaro Gnome -  https://gitlab.manjaro.org/profiles-and-settings/iso-profiles/-/blob/master/manjaro/gnome/Packages-Desktop

# gnome-shell - Минимальная установка Gnome,
# gdm - Загрузчик,
# gnome-control-center - Панель настроек Gnome,
# gnome-tweak-tool - Дополнительные настройки Gnome,
# tilix - Тайлинговый эмулятор терминала,
# gedit - Простой текстовый редактор,
# nautilus - Файловый менеджер,
# eog - Просмотр фото,
# evince - Просмотр документов,
# foliate - Читалка книг,
# file-roller - Работа с архивами,
# gnome-calculator - Калькулятор.
# gnome-disk-utility - Управление дисками,
# gnome-system-monitor - Мониторинг системы.
sudo pacman --noconfirm -S gnome-shell gdm gnome-control-center gnome-tweak-tool tilix gedit nautilus \
    eog evince foliate file-roller gnome-calculator gnome-disk-utility gnome-system-monitor
sudo systemctl enable gdm.service

# Программы и оформление Manjaro:
sudo pacman --noconfirm -S manjaro-settings-manager manjaro-browser-settings manjaro-hotfixes \
    pamac-gtk pamac-snap-plugin pamac-flatpak-plugin pamac-gnome-integration papirus-maia-icon-theme \
    matcha-gtk-theme adwaita-icon-theme adwaita-maia manjaro-gdm-theme illyria-wallpaper

# Расширения оболочки Gnome и переключатель внешнего вида рабочего стола:
sudo pacman --noconfirm -S gnome-layout-switcher \
    gnome-shell-extensions \
    gnome-shell-extension-gnome-ui-tune \
    gnome-shell-extension-vertical-overview \
    gnome-shell-extension-appindicator \
    gnome-shell-extension-arcmenu \
    gnome-shell-extension-dash-to-dock \
    gnome-shell-extension-dash-to-panel \
    gnome-shell-extension-desktop-icons-ng \
    gnome-shell-extension-material-shell \
    gnome-shell-extension-pop-shell \
    gnome-shell-extension-unite \
    gnome-shell-extension-gamemode \
gnome-shell-extension-gsconnect

#-----------------------------------------------------------------

# Завершаем установку, выходим (Ctrl+D) и перезагружаемся:
reboot

#-----------------------------------------------------------------
#-----------------------------------------------------------------

#### После перезагрузки ####

# Автозагрузка GDM:
echo -e "[daemon]\nAutomaticLoginEnable=true\nAutomaticLogin=${USER}" | sudo tee -a /etc/gdm/custom.conf

# Создаем каталоги пользователя в домашней папке на английском языке:
sudo pacman --noconfirm -S xdg-user-dirs && LC_ALL=C xdg-user-dirs-update --force
# То же самое, но на русском языке:
sudo pacman --noconfirm -S xdg-user-dirs && xdg-user-dirs-update --force

#-----------------------------------------------------------------

## Настройки ##

# Установку и настройку Zsh см. в файле https://raw.githubusercontent.com/S0u1b0y/install/Instructions/arch_zsh

## Tilix для Bash ##
echo -e '\n#Для терминала Tilix
if [[ $TILIX_ID ]]; then
        source /etc/profile.d/vte.sh
fi' >> ~/.bashrc
source ~/.bashrc

# Установим более низкий уровень использования файла подкачки (строка 1),
# Уменьшим время ожидания "зависших" приложений с 90 до 10 секунд (строка 2),
# Зададим максимальный размер systemd-журнала (строка 3).
echo 'vm.swappiness=10' | sudo tee /etc/sysctl.d/99-swappiness.conf
sudo sed -i 's/#DefaultTimeoutStopSec=90s/DefaultTimeoutStopSec=10s/' /etc/systemd/system.conf
sudo sed -i 's/#SystemMaxUse=/SystemMaxUse=50M/' /etc/systemd/journald.conf

#-----------------------------------------------------------------

## Оформление ##

# Оформление QT5 в стиле GTK:
yay --noconfirm -S qt5ct qt6-base adwaita-qt
echo 'export QT_QPA_PLATFORMTHEME=qt5ct' | sudo tee -a /etc/profile

# Шрифты, иконки и курсоры:
yay --noconfirm -S qogir-icon-theme

#-----------------------------------------------------------------

## Программы ##

# Ananicy - Управляет приоритетами приложений:
yay --noconfirm -S ananicy && sudo systemctl enable --now ananicy

# Nohang - Следит за потреблением озу, выгружая неиспользуемые процессы:
yay --noconfirm -S nohang && sudo systemctl enable --now nohang

# Браузеры:
# Firefox
sudo pacman --noconfirm -S firefox firefox-i18n-ru
# LibreWolf
yay --noconfirm -S librewolf
# Chrome:
yay --noconfirm -S google-chrome
# Chromium
sudo pacman --noconfirm -S chromium

# Bluetooth (опционально):
sudo pacman --noconfirm -S blueman
sudo systemctl enable --now bluetooth

# Управление сетевыми соединениями (опционально):
sudo pacman --noconfirm -S networkmanager plasma-nm
sudo systemctl enable --now NetworkManager
# Плагины NetworkManager для разных типов соединений (опционально):
sudo pacman --noconfirm -S networkmanager-openconnect networkmanager-openvpn networkmanager-pptp networkmanager-vpnc

# Если нужна поддержка принтера, то ставим:
pacman --noconfirm -S cups cups-pdf system-config-printer
sudo systemctl enable --now cups.service

# Torrent:
sudo pacman --noconfirm -S qbittorrent

# Java:
sudo pacman --noconfirm -S jdk-openjdk

# Code OSS (free Visual Studio Code):
yay -S code
# Мои настройки (опционально):
editor.wordWrap - On
editor.fontSize - 12
editor.dragAndDrop - false

# Работа с видео:
yay -S mediainfo mkvtoolnix-gui

# Мониторинг и разгон для nVidia карт Green With Envy (опционально):
yay --noconfirm -S gwe

# Yandex Disk:
yay --noconfirm -S yandex-disk && yandex-disk setup

#-----------------------------------------------------------------

## Игры ##

# Steam:
sudo pacman --noconfirm -S steam

# PortProton (https://portwine-linux.ru/port-proton-linux):
sudo pacman -S gamemode lib32-gamemode icoutils zenity bubblewrap zstd cabextract tar
wget -c "https://github.com/Castro-Fidel/PortWINE/raw/master/portwine_install_script/PortProton-97"
sh PortProton-97

# Настройка Proton в Steam-клиенте на Linux: В меню (вверху слева) нажимаем: Steam->Настройки,
# выбираем раздел Steam Play (в самом низу) и там ставим галочку "Включить Steam Play для других продуктов",
# жмем ОК. Все Proton включён, можно пытаться запускать Windows-игры.

# Minecraft:
yay -S multimc jre8-openjdk
sudo archlinux-java set java-17-openjdk
java -version

#-----------------------------------------------------------------

## Подкачка (опционально) ##

## Файл подкачки на Btrfs:
# Создаем подтом @swap (строка 1)
# Переходим в @swap (строка 2)
# Создаём пустой файл подкачки (строка 3)
# Отключаем копирование при записи для файла подкачки (строка 4)
# Отключаем сжатие файла подкачки (строка 5)
# Создаём файл нужного размера (строка 6)
# Разрешаем доступ к файлу подкачки только root-у (строка 7)
# Инициализируем файл подкачки и включаем его (строки 8-9)
# Прописываем в fstab, автомонтирование файла подкачки при загрузке системы (строка 10)
sudo btrfs subvolume create /@swap
cd /@swap
sudo truncate -s 0 ./swapfile
sudo chattr +C ./swapfile
sudo btrfs property set ./swapfile compression none
sudo dd if=/dev/zero of=./swapfile bs=1M count=8192 status=progress
sudo chmod 600 ./swapfile
sudo mkswap ./swapfile
sudo swapon ./swapfile
echo -e '# Swapfile\n/@swap/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
sudo mount -a

## Файл подкачки на Ext4:
# Переходим в mnt установленной системы (строка 1)
# Создаём файл нужного размера (строка 2)
# Разрешаем доступ к файлу подкачки только root-у (строка 3)
# Инициализируем файл подкачки и включаем его (строки 4-5)
# Прописываем в fstab, автомонтирование файла подкачки при загрузке системы (строка 6)
cd /mnt
dd if=/dev/zero of=./swapfile bs=1M count=8192 status=progress
chmod 600 ./swapfile
mkswap ./swapfile
swapon ./swapfile
echo -e '# Swapfile\n/mnt/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
sudo mount -a

## Zswap:
# Устанавливаем (строка 1)
# Раскоментируем параметры в файле конфигурации (строка 2)
# Включим использование (строка 3)
# Отведем для zswap, вместо четверти, половину оперативной памяти (строка 4)
# Включаем загрузку при старте системы (строка 5)
sudo pacman --noconfirm -S systemd-swap
sudo sed -i 's/#zram_/zram_/g' /etc/systemd/swap.conf
sudo sed -i 's/zram_enabled=0/zram_enabled=1/' /etc/systemd/swap.conf
sudo sed -i 's/RAM_SIZE \/ 4/RAM_SIZE \/ 2/' /etc/systemd/swap.conf
sudo systemctl enable --now systemd-swap.service

#-----------------------------------------------------------------

## Виртуализация (опционально) ##

# VirtualBox стандартное ядро:
sudo pacman --noconfirm -S virtualbox virtualbox-ext-vnc virtualbox-host-modules-arch
# VirtualBox LTS-ядро:
sudo pacman --noconfirm -S virtualbox virtualbox-ext-vnc virtualbox-host-dkms

# KVM (Qemu):
sudo pacman -S virt-manager bridge-utils dnsmasq dmidecode ebtables iptables openbsd-netcat qemu qemu-arch-extra qemu-guest-agent ovmf vde2
sudo systemctl enable --now libvirtd dnsmasq
sudo gpasswd -a $(whoami) kvm libvirt && newgrp libvirt
sudo sed -i 's/#unix_sock_group = "libvirt"/unix_sock_group = "libvirt"/' /etc/libvirt/libvirtd.conf
sudo sed -i 's/#unix_sock_rw_perms = "0770"/unix_sock_rw_perms = "0770"/' /etc/libvirt/libvirtd.conf
sudo systemctl restart libvirtd.service
