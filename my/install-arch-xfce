#!/bin/bash

#### Установка Arch XFCE ####

### Подготовка ###

# Скачиваем образ Manjaro для установки Manjaro или Archlinux - https://manjaro.org/download/
# Или скачиваем образ EndeavourOS для установки только Archlinux - https://endeavouros.com/latest-release/
# Записываем образ на флешку програмой Ventoy - https://github.com/ventoy/Ventoy/releases
# Загружаемся с записанного образа
# Запускаем эмулятор терминала.

# Переходим в учётную запись рута:
sudo su

# Загрузим необходмые скрипты:
scripturl='https://raw.githubusercontent.com/S0u1b0y/install/in/my'
curl -o /pacman-prepare "$scripturl/pacman-prepare-my"
curl -o /arch-base-btrfs "$scripturl/arch-base-btrfs"
curl -o /arch-base-ext4 "$scripturl/arch-base-ext4"
curl -o /arch-system-bios "$scripturl/arch-system-bios"

# ***

## Подготовка Pacman и репозиториев ##

# Для установки Archlinux:
sh /pacman-prepare archlinux

# Для установки Manjaro:
sh /pacman-prepare manjaro

#-----------------------------------------------------------------

### Установка ###
# Ядра: linux - стандартное ядро, linux-lts - LTS-ядро, linux-zen - Zen-ядро

## Btrfs ##

# VirtualBox
sh /arch-base-btrfs 2G linux user virt xfce

# Main
sh /arch-base-btrfs 8G linux soulboy main xfce

# ***

## Ext4 ##

# VirtualBox
sh /arch-base-ext4 40G 2G linux user virt xfce

# Main
sh /arch-base-ext4 40G 8G linux soulboy main xfce

#-----------------------------------------------------------------

#Если, на компьютере, есть MS Windows, то установим локальное время:
hwclock --systohc --localtime && date

#Если, на компьютере, только GNU/Linux, то установим время по UTC:
hwclock --systohc --utc && date

#-----------------------------------------------------------------

# Завершаем установку и перезагружаемся:
reboot

#*****************************************************************

#### После перезагрузки ####

#*****************************************************************

# Установку и настройку Zsh см. в файле https://raw.githubusercontent.com/S0u1b0y/install/in/arch-zsh

cd /tmp && git clone https://aur.archlinux.org/yay-bin.git && cd yay-bin && makepkg --noconfirm -si

sudo sed -i 's/^GRUB_TIMEOUT=5/GRUB_TIMEOUT=0/g' /etc/default/grub
sudo grub-mkconfig -o /boot/grub/grub.cfg

yay --noconfirm -S pamac-aur menulibre papirus-icon-theme qogir-icon-theme matcha-gtk-theme \
    ttf-meslo-nerd-font-powerlevel10k qt5ct qt6-base adwaita-qt
echo 'export QT_QPA_PLATFORMTHEME=qt5ct' | sudo tee -a /etc/profile

#-----------------------------------------------------------------

# Автологин LXDM:
echo -e "[base]\nautologin=${USER}" | sudo tee -a /etc/lxdm/lxdm.conf

#-----------------------------------------------------------------

## Программы для VirualBox ##

yay --noconfirm -S ananicy nohang librewolf-bin
sudo systemctl enable --now ananicy nohang
autoremove

#-----------------------------------------------------------------

## Программы ##

# Браузеры:
yay --noconfirm -S firefox firefox-i18n-ru librewolf-bin chromium

# Torrent:
sudo pacman --noconfirm -S transmission-remote-gtk qbittorrent

# Code OSS (free Visual Studio Code):
yay --noconfirm -S code
# Файл->Настроки->Параметры:
mouseWheelScrollSensitivity - 2
editor.renderWhitespace - none
editor.wordWrap - On
editor.fontSize - 12
editor.dragAndDrop - false
Render Line Highlight - none
# Сменить язык на русский
Ctrl-Shift-P -> вводим: Configure Display Language -> Меняем на Русский

# Дополнительный софт:
yay --noconfirm -S xarchiver galculator xviewer xviewer-plugins xreader foliate \
    gnome-disk-utility deadbeef mpv mediainfo mkvtoolnix-gui cherrytree

# Утилиты для контроля за использованием памяти:
yay --noconfirm -S ananicy nohang
sudo systemctl enable --now ananicy nohang

# Plank:
# Что бы убрать невидимую полосу - Меню->Настройки->Диспетчер окон (дополнительно)->{Вкладка}Эффекты->Отображать тени под сворачивающимися окнами->Снять галочку.
sudo pacman --noconfirm -S plank

# Yandex Disk:
yay --noconfirm -S yandex-disk && yandex-disk setup

# gnome-system-monitor - Мониторинг системы.
yay --noconfirm -S gnome-system-monitor

# Мониторинг и разгон для nVidia карт Green With Envy:
yay --noconfirm -S gwe

#-----------------------------------------------------------------

## Игры ##

# Steam:
sudo pacman --noconfirm -S steam

# PortProton (https://portwine-linux.ru/port-proton-linux):
sudo pacman --noconfirm -S gamemode lib32-gamemode icoutils zenity bubblewrap zstd cabextract tar
wget -c 'https://github.com/Castro-Fidel/PortWINE/raw/master/portwine_install_script/PortProton-97'
sh PortProton-97

# Настройка Proton в Steam-клиенте на Linux: В меню (вверху слева) нажимаем: Steam->Настройки,
# выбираем раздел Steam Play (в самом низу) и там ставим галочку "Включить Steam Play для других продуктов",
# жмем ОК. Все Proton включён, можно пытаться запускать Windows-игры.

# Minecraft:
yay --noconfirm -S multimc jre-openjdk jre8-openjdk
sudo archlinux-java set java-17-openjdk
archlinux-java status

#-----------------------------------------------------------------

## Виртуализация ##

# VirtualBox стандартное ядро:
sudo pacman --noconfirm -S virtualbox virtualbox-ext-vnc virtualbox-host-modules-arch
# VirtualBox LTS-ядро:
sudo pacman --noconfirm -S virtualbox virtualbox-ext-vnc virtualbox-host-dkms

# KVM (Qemu):
sudo pacman --noconfirm -S virt-manager bridge-utils dnsmasq dmidecode ebtables iptables \
    openbsd-netcat qemu qemu-arch-extra qemu-guest-agent ovmf vde2
sudo systemctl enable --now libvirtd dnsmasq
sudo gpasswd -a $(whoami) kvm libvirt && newgrp libvirt
sudo sed -i 's/^#unix_sock_group = "libvirt"/unix_sock_group = "libvirt"/' /etc/libvirt/libvirtd.conf
sudo sed -i 's/^#unix_sock_rw_perms = "0770"/unix_sock_rw_perms = "0770"/' /etc/libvirt/libvirtd.conf
sudo systemctl restart libvirtd.service
