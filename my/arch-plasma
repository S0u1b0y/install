#!/bin/bash

#### Установка Arch KDE Plasma ####

### Подготовка ###

# Скачиваем образ Manjaro для установки Manjaro или Archlinux - https://manjaro.org/download/
# Или скачиваем образ EndeavourOS для установки только Archlinux - https://endeavouros.com/latest-release/
# Записываем образ на флешку програмой Ventoy - https://github.com/ventoy/Ventoy/releases
# Загружаемся с записанного образа
# Запускаем эмулятор терминала.

# Переходим в учётную запись рута:
sudo su

# Загрузим необходмые скрипты:
scripturl='https://raw.githubusercontent.com/S0u1b0y/install/in/my'
curl -o /pacman-prepare "$scripturl/pacman-prepare"
curl -o /arch-btrfs "$scripturl/arch-btrfs"
curl -o /arch-ext4 "$scripturl/arch-ext4"
curl -o /arch-bios "$scripturl/arch-bios"

# ***

## Подготовка Pacman и репозиториев ##

# Для установки Archlinux:
sh /pacman-prepare archlinux

# Для установки Manjaro:
sh /pacman-prepare manjaro

#-----------------------------------------------------------------

### Установка ###
# Ядра: linux - стандартное ядро, linux-lts - LTS-ядро, linux-zen - Zen-ядро

## Btrfs ##

# VirtualBox
sh /arch-btrfs 2G linux user virt plasma

# Main
sh /arch-btrfs 8G linux soulboy main plasma

# ***

## Ext4 ##

# VirtualBox
sh /arch-ext4 40G 2G linux normal user virt plasma

# Main
sh /arch-ext4 40G 8G linux safe soulboy main plasma

#-----------------------------------------------------------------

#Если, на компьютере, есть MS Windows, то установим локальное время:
hwclock --systohc --localtime && date

#Если, на компьютере, только GNU/Linux, то установим время по UTC:
hwclock --systohc --utc && date

#-----------------------------------------------------------------

# Завершаем установку и перезагружаемся:
reboot

#-----------------------------------------------------------------
                #### После перезагрузки ####
#-----------------------------------------------------------------

# Настройку Zsh см. в файле https://raw.githubusercontent.com/S0u1b0y/install/in/arch-zsh

cd /tmp && git clone https://aur.archlinux.org/yay-bin.git && cd yay-bin && makepkg --noconfirm -si

sudo sed -i 's/^GRUB_TIMEOUT=5/GRUB_TIMEOUT=0/g' /etc/default/grub
sudo grub-mkconfig -o /boot/grub/grub.cfg

yay --noconfirm -S pamac-aur pamac-tray-icon-plasma qogir-icon-theme ttf-meslo-nerd-font-powerlevel10k

#-----------------------------------------------------------------

# Автологин SDDM:
sudo mkdir -p /etc/sddm.conf.d
sudo touch /etc/sddm.conf.d/autologin.conf
echo -e "[Autologin]
User=${USER}
Session=plasma" | sudo tee /etc/sddm.conf.d/autologin.conf

#-----------------------------------------------------------------

## Программы для VirualBox ##

yay --noconfirm -S ananicy nohang librewolf-bin xdg-utils gwenview kimageformats qt5-imageformats \
    okular poppler-data kcalc foliate ark
sudo systemctl enable --now ananicy nohang
autoremove

#-----------------------------------------------------------------

## Программы ##

# Браузеры:
yay --noconfirm -S firefox firefox-i18n-ru librewolf-bin chromium

# Torrent:
sudo pacman --noconfirm -S transmission-remote-gtk qbittorrent

# Code OSS (free Visual Studio Code):
yay --noconfirm -S code
# Настроки:
echo -e '{
    "workbench.colorTheme": "Default Dark+",
    "window.menuBarVisibility": "compact",
    "workbench.activityBar.visible": false,
    "security.workspace.trust.untrustedFiles": "open",
    "editor.mouseWheelScrollSensitivity": 2,
    "editor.renderWhitespace": "none",
    "editor.wordWrap": "on",
    "editor.fontSize": 12,
    "editor.dragAndDrop": false,
    "editor.renderLineHighlight": "none"
    "editor.guides.indentation": false
}' > ~/.config/Code - OSS/User/settings.json
# Сменить язык на русский
Ctrl+Shift+P -> вводим: Configure Display Language -> Меняем на Русский

# Дополнительный софт:
sudo pacman --noconfirm -S xdg-utils gwenview kimageformats qt5-imageformats okular poppler-data \
    kcalc foliate ark gnome-disk-utility audacious mpv mediainfo mkvtoolnix-gui cherrytree

# Утилиты для контроля за использованием памяти:
yay --noconfirm -S ananicy nohang
sudo systemctl enable --now ananicy nohang

# Yandex Disk:
yay --noconfirm -S yandex-disk && yandex-disk setup

# Дополнительный софт Plasma:
sudo pacman --noconfirm -S plasma-systemmonitor plasma-browser-integration kinfocenter kinit

# Вижет погоды (Удаляем города по умолчанию, добавлям нужный +OWM, Нужный город ищем на https://openweathermap.org):
yay --noconfirm -S qt5-xmlpatterns plasma5-applets-weather-widget

# Мониторинг и разгон для nVidia карт Green With Envy:
yay --noconfirm -S gwe

# Управление сетевыми соединениями (опционально):
sudo pacman --noconfirm -S networkmanager plasma-nm
sudo systemctl enable --now NetworkManager

#-----------------------------------------------------------------

## Игры ##

# Steam:
sudo pacman --noconfirm -S steam

# PortProton (https://portwine-linux.ru/port-proton-linux):
sudo pacman --noconfirm -S gamemode lib32-gamemode icoutils zenity bubblewrap zstd cabextract tar
wget -c 'https://github.com/Castro-Fidel/PortWINE/raw/master/portwine_install_script/PortProton-97'
sh PortProton-97

# Настройка Proton в Steam-клиенте на Linux: В меню (вверху слева) нажимаем: Steam->Настройки,
# выбираем раздел Steam Play (в самом низу) и там ставим галочку "Включить Steam Play для других продуктов",
# жмем ОК. Все Proton включён, можно пытаться запускать Windows-игры.

# Minecraft:
yay --noconfirm -S multimc jre-openjdk jre8-openjdk
sudo archlinux-java set java-17-openjdk
java -version

#-----------------------------------------------------------------

## Виртуализация ##

# VirtualBox стандартное ядро:
sudo pacman --noconfirm -S virtualbox virtualbox-ext-vnc virtualbox-host-modules-arch
# VirtualBox LTS-ядро:
sudo pacman --noconfirm -S virtualbox virtualbox-ext-vnc virtualbox-host-dkms

# KVM (Qemu):
sudo pacman --noconfirm -S virt-manager bridge-utils dnsmasq dmidecode ebtables iptables \
    openbsd-netcat qemu qemu-arch-extra qemu-guest-agent ovmf vde2
sudo systemctl enable --now libvirtd dnsmasq
sudo gpasswd -a $(whoami) kvm libvirt && newgrp libvirt
sudo sed -i 's/^#unix_sock_group = "libvirt"/unix_sock_group = "libvirt"/' /etc/libvirt/libvirtd.conf
sudo sed -i 's/^#unix_sock_rw_perms = "0770"/unix_sock_rw_perms = "0770"/' /etc/libvirt/libvirtd.conf
sudo systemctl restart libvirtd.service
