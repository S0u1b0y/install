#!/bin/bash

#### Установка Arch KDE Plasma ####

### Подготовка ###

# Скачиваем образ Manjaro Minimal для установки Manjaro или Archlinux - https://manjaro.org/downloads/official/xfce/
# Или скачиваем образ EndeavourOS для установки только Archlinux - https://endeavouros.com/latest-release/
# Записываем образ на флешку програмой Ventoy - https://github.com/ventoy/Ventoy/releases
# Загружаемся с записанного образа

# Переходим в учётную запись рута:
sudo su

## Настройка Pacman и репозиториев ##
# Для других стран можно сгенерировать тут: https://archlinux.org/mirrorlist/
cp -n /etc/pacman.conf /etc/pacman.conf.bak
cp -n /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak
echo -e '[options]
HoldPkg = pacman glibc
Architecture = auto
Color
CheckSpace
ParallelDownloads = 10
SigLevel = Required DatabaseOptional
LocalFileSigLevel = Optional
[core]
Include = /etc/pacman.d/mirrorlist
[extra]
Include = /etc/pacman.d/mirrorlist
[community]
Include = /etc/pacman.d/mirrorlist
[multilib]
Include = /etc/pacman.d/mirrorlist' > /etc/pacman.conf
echo -e '## Russia
Server = https://mirror.yandex.ru/archlinux/$repo/os/$arch
Server = https://mirror.truenetwork.ru/archlinux/$repo/os/$arch
Server = https://mirror.rol.ru/archlinux/$repo/os/$arch
Server = https://mirror.nw-sys.ru/archlinux/$repo/os/$arch
Server = https://mirror.surf/archlinux/$repo/os/$arch' > /etc/pacman.d/mirrorlist
echo -e '\n## Finland
Server = https://arch.mcstrugs.org/$repo/os/$arch
Server = https://mirror.arctic.lol/ArchMirror/$repo/os/$arch
Server = https://mirror.srv.fail/archlinux/$repo/os/$arch
Server = https://mirror.wuki.li/archlinux/$repo/os/$arch
Server = https://arch.yhtez.xyz/$repo/os/$arch' >> /etc/pacman.d/mirrorlist
echo -e '\n## Worldwide
Server = http://mirror.rackspace.com/archlinux/$repo/os/$arch
Server = https://mirror.rackspace.com/archlinux/$repo/os/$arch' >> /etc/pacman.d/mirrorlist

#-----------------------------------------------------------------

### Установка ###
# Разметка, форматирование диска и установка базовой системы.

## Btrfs ##

# VirtualBox (linux - стандартное ядро, linux-lts - LTS-ядро)
curl -O 'https://raw.githubusercontent.com/S0u1b0y/install/in/my/arch_base_btrfs'
sh arch_base_btrfs 2G linux

# Main (linux - стандартное ядро, linux-lts - LTS-ядро)
curl -O 'https://raw.githubusercontent.com/S0u1b0y/install/in/my/arch_base_btrfs'
sh arch_base_btrfs 8G linux

# ***

## Ext4 ##

# VirtualBox (linux - стандартное ядро, linux-lts - LTS-ядро)
curl -O 'https://raw.githubusercontent.com/S0u1b0y/install/in/my/arch_base_ext4'
sh arch_base_ext4 40G 2G linux

# Main (linux - стандартное ядро, linux-lts - LTS-ядро)
curl -O 'https://raw.githubusercontent.com/S0u1b0y/install/in/my/arch_base_ext4'
sh arch_base_ext4 40G 8G linux

#-----------------------------------------------------------------

## Чрутимся:
# Если ставим из Manjaro
manjaro-chroot /mnt
# Если ставим из Endeavour или Arch
arch-chroot /mnt

#-----------------------------------------------------------------

## Установка основной системы ##

# VirtualBox
cd /tmp && curl -O 'https://raw.githubusercontent.com/S0u1b0y/install/in/my/arch_system_bios'
sh arch_system_bios user virt

# Main
cd /tmp && curl -O 'https://raw.githubusercontent.com/S0u1b0y/install/in/my/arch_system_bios'
sh arch_system_bios soulboy main

#-----------------------------------------------------------------

#Если, на компьютере, есть MS Windows, то установим локальное время:
hwclock --systohc --localtime && date

#Если, на компьютере, только GNU/Linux, то установим время по UTC:
hwclock --systohc --utc && date

#-----------------------------------------------------------------

## Статический IP для VirualBox ##
cp -n /etc/dhcpcd.conf /etc/dhcpcd.conf.bak
echo -e 'interface enp0s3
static ip_address=192.168.0.50/24
static routers=192.168.0.100
static domain_name_servers=192.168.0.100' > /etc/dhcpcd.conf

#-----------------------------------------------------------------

## Установка KDE Plasma ##

sudo pacman --noconfirm -S sddm sddm-kcm plasma-desktop kscreen powerdevil plasma-pa \
    kde-gtk-config breeze-gtk konsole kwrite kcalc dolphin dolphin-plugins
sudo systemctl enable sddm.service

#-----------------------------------------------------------------

# Завершаем установку, выходим (Ctrl+D) и перезагружаемся:
reboot

#-----------------------------------------------------------------
#-----------------------------------------------------------------

#### После перезагрузки ####

# Установку и настройку Zsh см. в файле https://raw.githubusercontent.com/S0u1b0y/install/Instructions/arch-zsh

echo -e '\n#### Aliases ####

# Переопеделение Pacman для установки и удаления без подтверждения:
alias spac="sudo pacman --noconfirm"

# Удаление неиспользуемых пакетов (Если нечего удалять, вылезет "ошибка: аргумент "-" указан с пустым stdin", это нормально).
alias autoremove="sudo pacman --noconfirm -Qtdq | sudo pacman --noconfirm -Rns -"
alias фгещкуьщму="sudo pacman --noconfirm -Qtdq | sudo pacman --noconfirm -Rns -"

# Быстрое обновление (pup - Pacman UPdate)
alias pup="sudo pacman -Syu"
alias згз="sudo pacman -Syu"

# Пинг делает только 5 запросов.
alias ping="ping -c 5"' >> ~/.bashrc
source ~/.bashrc
echo 'vm.swappiness=10' | sudo tee /etc/sysctl.d/99-swappiness.conf
sudo sed -i 's/#DefaultTimeoutStopSec=90s/DefaultTimeoutStopSec=10s/' /etc/systemd/system.conf
sudo sed -i 's/#SystemMaxUse=/SystemMaxUse=50M/' /etc/systemd/journald.conf
sudo sed -i 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT=0/g' /etc/default/grub
sudo grub-mkconfig -o /boot/grub/grub.cfg
sudo pacman --noconfirm -S xdg-user-dirs && LC_ALL=C xdg-user-dirs-update --force
cd /tmp && git clone https://aur.archlinux.org/yay-bin.git && cd yay-bin && makepkg --noconfirm -si
yay --noconfirm -S pamac-aur pamac-tray-icon-plasma qogir-icon-theme ttf-meslo-nerd-font-powerlevel10k

#-----------------------------------------------------------------

## Программы для VirualBox ##

yay --noconfirm -S ananicy nohang librewolf-bin
sudo systemctl enable --now ananicy nohang
autoremove

#-----------------------------------------------------------------

## Программы для Main ##

# Браузеры:
yay --noconfirm -S firefox firefox-i18n-ru librewolf-bin chromium

# Code OSS (free Visual Studio Code):
yay --noconfirm -S code
# Мои настройки:
mouseWheelScrollSensitivity - 2
editor.renderWhitespace - none
editor.wordWrap - On
editor.fontSize - 12
editor.dragAndDrop - false
# Сменить язык на русский
Ctrl-Shift-P -> Configure Display Language -> Меняем на Русский

# Дополнительный софт:
sudo pacman --noconfirm -S gwenview kimageformats qt5-imageformats okular poppler-data kcalc foliate \
    ark audacious mpv gnome-disk-utility
yay --noconfirm -S ananicy nohang mediainfo mkvtoolnix-gui cherrytree
sudo systemctl enable --now ananicy nohang

# Yandex Disk:
yay --noconfirm -S yandex-disk && yandex-disk setup

# Мониторинг и разгон для nVidia карт Green With Envy:
yay --noconfirm -S gwe

# Дополнительный софт Plasma:
sudo pacman --noconfirm -S plasma-systemmonitor plasma-browser-integration kinfocenter kinit

# Вижет погоды (Удаляем города по умолчанию, добавлям нужный +OWM, Нужный город ищем на https://openweathermap.org):
yay --noconfirm -S qt5-xmlpatterns plasma5-applets-weather-widget

#-----------------------------------------------------------------

## Игры ##

# Steam:
sudo pacman --noconfirm -S steam

# PortProton (https://portwine-linux.ru/port-proton-linux):
sudo pacman --noconfirm -S gamemode lib32-gamemode icoutils zenity bubblewrap zstd cabextract tar
wget -c 'https://github.com/Castro-Fidel/PortWINE/raw/master/portwine_install_script/PortProton-97'
sh PortProton-97

# Настройка Proton в Steam-клиенте на Linux: В меню (вверху слева) нажимаем: Steam->Настройки,
# выбираем раздел Steam Play (в самом низу) и там ставим галочку "Включить Steam Play для других продуктов",
# жмем ОК. Все Proton включён, можно пытаться запускать Windows-игры.

# Minecraft:
yay --noconfirm -S multimc jre-openjdk jre8-openjdk
sudo archlinux-java set java-17-openjdk
java -version

#-----------------------------------------------------------------

## Виртуализация ##

# VirtualBox стандартное ядро:
sudo pacman --noconfirm -S virtualbox virtualbox-ext-vnc virtualbox-host-modules-arch
# VirtualBox LTS-ядро:
sudo pacman --noconfirm -S virtualbox virtualbox-ext-vnc virtualbox-host-dkms

# KVM (Qemu):
sudo pacman --noconfirm -S virt-manager bridge-utils dnsmasq dmidecode ebtables iptables \
    openbsd-netcat qemu qemu-arch-extra qemu-guest-agent ovmf vde2
sudo systemctl enable --now libvirtd dnsmasq
sudo gpasswd -a $(whoami) kvm libvirt && newgrp libvirt
sudo sed -i 's/#unix_sock_group = "libvirt"/unix_sock_group = "libvirt"/' /etc/libvirt/libvirtd.conf
sudo sed -i 's/#unix_sock_rw_perms = "0770"/unix_sock_rw_perms = "0770"/' /etc/libvirt/libvirtd.conf
sudo systemctl restart libvirtd.service
