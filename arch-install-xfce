#### Установка Arch XFCE ####

### Подготовка ###

# Скачиваем образ Manjaro Minimal - https://manjaro.org/downloads/official/xfce/
# Или скачиваем образ EndeavourOS - https://endeavouros.com/latest-release/
# Записываем образ на флешку, например програмой Ventoy - https://github.com/ventoy/Ventoy/releases
# Загружаемся с записанного образа,
# Запускаем эмулятор терминала.

# Переходим в учётную запись рута:
sudo su

#-----------------------------------------------------------------

### Установка ###
# Разметка, форматирование диска и установка базовой системы.
# Внимание!!! Запускаем только один из двух скриптов, в зависимости от устанавливаемой файловой системы:

## Btrfs ##
# Внимание!!! Все данные с указанного диска будут СТЁРТЫ!!!
# Для UEFI скрипт создаёт два раздела: основной с тремя подтомами @root, @home, @snapshot и boot/efi
# Для BIOS скрипт создаёт один основной раздел с тремя подтомами @root, @home и @snapshot
# Передаваемые скрипту параметры:
# 1й - имя диска,
# 2й - размер boot/efi-раздела,
# 3й - размер файла подкачки в мегабайтах (8192 = 8х1024 = 8Gb), 0 - не создавать,
# 4й - устанавливаемое ядро (linux-lts - LTS-ядро, linux - Последняя стабильная версия).
wget -c "https://raw.githubusercontent.com/S0u1b0y/install/Instructions/script/arch-base-btrfs"
sh arch-base-btrfs /dev/sda 300M 8192 linux

## Ext4 ##
# Внимание!!! Все данные с указанного диска будут СТЁРТЫ!!!
# Для UEFI скрипт создаёт три раздела: root, home и boot/efi
# Для BIOS скрипт создаёт два раздела: root, home
# Передаваемые скрипту параметры:
# 1й - имя диска,
# 2й - размер root-раздела (для раздела home - всё остальное пространство),
# 3й - размер boot/efi-раздела,
# 4й - размер файла подкачки в мегабайтах (8192 = 8х1024 = 8Gb), 0 - не создавать,
# 5й - устанавливаемое ядро (linux-lts - LTS-ядро, linux - Последняя стабильная версия).
wget -c "https://raw.githubusercontent.com/S0u1b0y/install/Instructions/script/arch-base-ext4"
sh arch-base-ext4 /dev/sda 40G 300M 8192 linux

#-----------------------------------------------------------------

## Чрутимся:
# Если ставим из Manjaro
manjaro-chroot /mnt
# Если ставим из Endeavour или Arch
arch-chroot /mnt

#-----------------------------------------------------------------

## Установка основной системы ##

# Передаваемые скрипту параметры: 1й - имя пользователя, 2й - имя компьютера в сети, 3й - часовой пояс.
cd /tmp && wget -c "https://raw.githubusercontent.com/S0u1b0y/install/Instructions/script/arch-system"
sh arch-system user virt Europe/Moscow

#-----------------------------------------------------------------

## Zswap - подкачка в оперативной памяти (Опционально) ##

# Устанавливаем (строка 1)
# Раскоментируем параметры в файле конфигурации (строка 2)
# Включим использование (строка 3)
# Отведем для zswap, вместо четверти, половину оперативной памяти (строка 4)
# Включаем загрузку при старте системы (строка 5)
pacman --noconfirm -S systemd-swap
sed -i 's/#zram_/zram_/g' /etc/systemd/swap.conf
sed -i 's/zram_enabled=0/zram_enabled=1/' /etc/systemd/swap.conf
sed -i 's/RAM_SIZE \/ 4/RAM_SIZE \/ 2/' /etc/systemd/swap.conf
systemctl enable systemd-swap

#-----------------------------------------------------------------

## Статический IP (Опционально) ##

# Данные (netface, ipaddr, gateway) поменяйте на свои (строки 1-3),
# Имя сетевого интерфейса (переменная netface) можно узнать можно командой - ip a
# Делаем резервную копию файла настроек, на всякий случай (строка 4),
# Прописываем, в файл конфигурации, параметры настройки сети (строки 5-8),
netface=enp0s3
ipaddr=192.168.0.50
gateway=192.168.0.100
cp /etc/dhcpcd.conf /etc/dhcpcd.conf.bak
echo -e "interface $netface
static ip_address=$ipaddr/24
static routers=$gateway
static domain_name_servers=$gateway" > /etc/dhcpcd.conf

#-----------------------------------------------------------------

## Драйвера для ноутбука ##

# Драйвер тачпада:
pacman --noconfirm -S xf86-input-synaptics

# Управление гибридной графикой Optimus Manager:
yay -S optimus-manager optimus-manager-qt
sudo systemctl enable optimus-manager

#-----------------------------------------------------------------

## Установка XFCE ##

# xorg-server - Иксы,
# xfce4 - XFCE,
# lxdm - Загрузчик,
# pavucontrol - Панель управления звуком Pulseaudio,
# xfce4-xkb-plugin - Плагин раскладки клавиатуры,
# xfce4-pulseaudio-plugin - Плагин управления звуком,
# xfce4-clipman-plugin - Плагин расширенного буфера обмена,
# xfce4-whiskermenu-plugin - Современное меню,
# xfce4-weather-plugin - Плагин погоды,
# tilix - Тайлинговый эмулятор терминала,
# thunar-archive-plugin - Работа с архивами,
# gnome-disk-utility - Управление дисками,
# Удалим xfce4-terminal, т. к. вместо него установили tilix.
sudo pacman --noconfirm -S xorg-server xfce4 lxdm pavucontrol tilix thunar-archive-plugin \
    xfce4-xkb-plugin xfce4-pulseaudio-plugin xfce4-clipman-plugin xfce4-whiskermenu-plugin \
    xfce4-weather-plugin gnome-disk-utility
sudo systemctl enable lxdm.service
sudo pacman --noconfirm -Rns xfce4-terminal

#-----------------------------------------------------------------

# Завершаем установку, выходим (Ctrl+D) и перезагружаемся:
reboot

#-----------------------------------------------------------------
#-----------------------------------------------------------------

#### После перезагрузки ####

# Автозагрузка LXDM:
echo -e "[base]\nautologin=${USER}" | sudo tee -a /etc/lxdm/lxdm.conf

# No_Beep (Отключение, раздражающего звука, pc-спикера):
echo 'blacklist pcspkr' | sudo tee /etc/modprobe.d/nobeep.conf

# Создаем каталоги пользователя в домашней папке на английском языке:
sudo pacman --noconfirm -S xdg-user-dirs && LC_ALL=C xdg-user-dirs-update --force
# То же самое, но на русском языке:
sudo pacman --noconfirm -S xdg-user-dirs && xdg-user-dirs-update --force

# Установим менеджер пакетов yay:
cd /tmp && git clone https://aur.archlinux.org/yay-bin.git && cd yay-bin && makepkg --noconfirm -si

# Дополнительные утилиты:
# pamac-aur - GUI для управления пакетами,
# menulibre - Настройка главного меню,
yay --noconfirm -S pamac-aur menulibre

# Дополнительные программы (Опционально):
# galculator - Калькулятор,
# xarchiver - Работа с архивами,
# xed - Простой текстовый редактор,
# xviewer xviewer-plugins - Просмотр фото,
# xreader - Просмотр документов,
# foliate - Читалка книг,
yay --noconfirm -S galculator xarchiver xed xviewer xviewer-plugins xreader foliate

# Шрифты, иконки и курсоры:
yay --noconfirm -S papirus-icon-theme qogir-icon-theme matcha-gtk-theme ttf-meslo-nerd-font-powerlevel10k

# Оформление QT5 в стиле GTK:
yay --noconfirm -S qt5ct qt6-base adwaita-qt
echo 'export QT_QPA_PLATFORMTHEME=qt5ct' | sudo tee -a /etc/profile

#-----------------------------------------------------------------

### Настройки ###

# Установку и настройку ZSH см. в файле https://raw.githubusercontent.com/S0u1b0y/install/Instructions/arch-zsh

# Установим более низкий уровень использования файла подкачки (строка 1),
# Уменьшим время ожидания "зависших" приложений с 90 до 10 секунд (строка 2),
# Зададим максимальный размер systemd-журнала (строка 3).
echo 'vm.swappiness=10' | sudo tee /etc/sysctl.d/99-swappiness.conf
sudo sed -i 's/#DefaultTimeoutStopSec=90s/DefaultTimeoutStopSec=10s/' /etc/systemd/system.conf
sudo sed -i 's/#SystemMaxUse=/SystemMaxUse=50M/' /etc/systemd/journald.conf

# ***

## Bash ##

# Tilix #
echo -e '\n#Для терминала Tilix
if [[ $TILIX_ID ]]; then
        source /etc/profile.d/vte.sh
fi' >> ~/.bashrc
source ~/.bashrc

# Алиасы #
echo -e '
#### Aliases ####

# Переопеделение Pacman для установки и удаления без подтверждения:
alias spac="sudo pacman --noconfirm"

# Удаление неиспользуемых пакетов (Если нечего удалять, вылезет "ошибка: аргумент "-" указан с пустым stdin", это нормально).
alias autoremove="sudo pacman --noconfirm -Qtdq | sudo pacman --noconfirm -Rns -"
alias фгещкуьщму="sudo pacman --noconfirm -Qtdq | sudo pacman --noconfirm -Rns -"

# Быстрое обновление (pup - Pacman UPdate)
alias pup="sudo pacman -Syu"
alias згз="sudo pacman -Syu"

# Пинг делает только 5 запросов.
alias ping="ping -c 5"' >> ~/.bashrc
source ~/.bashrc

# ***

## GRUB (Опционально) ##

# Если есть ещё установленные системы, то ставим дополнительно:
sudo pacman --noconfirm -S os-prober
# И перегенерируем файл конфигурации grub
sudo grub-mkconfig -o /boot/grub/grub.cfg

# Если нет других установленных систем, то убираем загрузочное меню Grub,
# меняя GRUB_TIMEOUT с пяти секунд на ноль.
sudo sed -i 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT=0/g' /etc/default/grub
# И перегенерируем файл конфигурации grub
sudo grub-mkconfig -o /boot/grub/grub.cfg

#-----------------------------------------------------------------

## Программы ##

## Plank ##
# Что бы убрать невидимую полосу - Меню->Настройки->Диспетчер окон (дополнительно)->{Вкладка}Эффекты->Отображать тени под сворачивающимися окнами->Снять галочку.
sudo pacman --noconfirm -S plank

# Ananicy - Управляет приоритетами приложений:
yay --noconfirm -S ananicy && sudo systemctl enable --now ananicy

# Nohang - Следит за потреблением озу, выгружая неиспользуемые процессы:
yay --noconfirm -S nohang && sudo systemctl enable --now nohang

# Браузеры:
# Firefox
sudo pacman --noconfirm -S firefox firefox-i18n-ru
# LibreWolf
yay --noconfirm -S librewolf
# Chrome:
yay --noconfirm -S google-chrome
# Chromium
sudo pacman --noconfirm -S chromium

# Bluetooth (опционально):
sudo pacman --noconfirm -S blueman
sudo systemctl enable --now bluetooth

# Если нужна поддержка принтера, то ставим:
pacman --noconfirm -S cups cups-pdf system-config-printer
sudo systemctl enable --now cups.service

# Torrent:
sudo pacman --noconfirm -S qbittorrent

# Java:
sudo pacman --noconfirm -S jre-openjdk

# Code OSS (free Visual Studio Code):
yay -S code
# Мои настройки (опционально):
editor.wordWrap - On
editor.fontSize - 12
editor.dragAndDrop - false

# Офис:
sudo pacman --noconfirm -S abiword gnumeric

# Работа с видео:
yay -S mediainfo mkvtoolnix-gui

# Yandex Disk:
yay --noconfirm -S yandex-disk && yandex-disk setup

# gnome-system-monitor - Мониторинг системы.
yay --noconfirm -S gnome-system-monitor

# Мониторинг и разгон для nVidia карт Green With Envy:
yay --noconfirm -S gwe

#-----------------------------------------------------------------

## Игры ##

# Steam:
sudo pacman --noconfirm -S steam

# PortProton (https://portwine-linux.ru/port-proton-linux):
sudo pacman -S gamemode lib32-gamemode icoutils zenity bubblewrap zstd cabextract tar
wget -c "https://github.com/Castro-Fidel/PortWINE/raw/master/portwine_install_script/PortProton-97"
sh PortProton-97

# Настройка Proton в Steam-клиенте на Linux: В меню (вверху слева) нажимаем: Steam->Настройки,
# выбираем раздел Steam Play (в самом низу) и там ставим галочку "Включить Steam Play для других продуктов",
# жмем ОК. Все Proton включён, можно пытаться запускать Windows-игры.

# Minecraft:
yay --noconfirm -S multimc5 jre8-openjdk
sudo archlinux-java set java-17-openjdk
archlinux-java status

#-----------------------------------------------------------------

## Виртуализация (опционально) ##

# VirtualBox стандартное ядро:
sudo pacman --noconfirm -S virtualbox virtualbox-ext-vnc virtualbox-host-modules-arch
# VirtualBox LTS-ядро:
sudo pacman --noconfirm -S virtualbox virtualbox-ext-vnc virtualbox-host-dkms

# KVM (Qemu):
sudo pacman -S virt-manager bridge-utils dnsmasq dmidecode ebtables iptables openbsd-netcat qemu \
    qemu-arch-extra qemu-guest-agent ovmf vde2
sudo systemctl enable --now libvirtd dnsmasq
sudo gpasswd -a $(whoami) kvm libvirt && newgrp libvirt
sudo sed -i 's/#unix_sock_group = "libvirt"/unix_sock_group = "libvirt"/' /etc/libvirt/libvirtd.conf
sudo sed -i 's/#unix_sock_rw_perms = "0770"/unix_sock_rw_perms = "0770"/' /etc/libvirt/libvirtd.conf
sudo systemctl restart libvirtd.service

#-----------------------------------------------------------------

#### Замена ядер ####

# Обычное на LTS:
# Сносим старое ядро
sudo pacman --noconfirm -R linux linux-headers
# Ставим новое ядро
sudo pacman --noconfirm -S linux-lts linux-lts-headers
# Переконфигурируем Grub
sudo grub-mkconfig -o /boot/grub/grub.cfg
# Перезагружаемся
sudo reboot

# LTS на обычное:
sudo pacman --noconfirm -R linux-lts linux-lts-headers
sudo pacman --noconfirm -S linux linux-headers
sudo grub-mkconfig -o /boot/grub/grub.cfg
sudo reboot

# ***

## VirtualBox ##

# Обычное на LTS:
# Сносим vbox утилиты и старое ядро
sudo pacman --noconfirm -R virtualbox-guest-utils linux linux-headers
# Ставим новое ядро и vbox утилиты
sudo pacman --noconfirm -S linux-lts linux-lts-headers virtualbox-guest-utils
# Переконфигурируем Grub
sudo grub-mkconfig -o /boot/grub/grub.cfg
# Перезагружаемся
sudo reboot

# LTS на обычное:
sudo pacman --noconfirm -R virtualbox-guest-utils linux-lts linux-lts-headers
sudo pacman --noconfirm -S linux linux-headers virtualbox-guest-utils
sudo grub-mkconfig -o /boot/grub/grub.cfg
sudo reboot
